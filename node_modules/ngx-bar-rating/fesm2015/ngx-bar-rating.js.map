{"version":3,"file":"ngx-bar-rating.js","sources":["../../../projects/ngx-bar-rating/src/lib/bar-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.pipe.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.module.ts","../../../projects/ngx-bar-rating/src/ngx-bar-rating.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, Validator, NG_VALIDATORS, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\n/** This allows support [(ngModel)] and ngControl. */\nconst RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BarRating),\n  multi: true\n};\n\n/** This allows control required validation. */\nconst RATING_VALUE_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BarRating),\n  multi: true,\n};\n\n@Component({\n  selector: 'bar-rating',\n  templateUrl: './bar-rating.html',\n  styleUrls: ['./bar-rating.scss'],\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarRating implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  contexts: { fraction: boolean, selected: boolean, active: boolean, click: (e) => void, enter: () => void }[] = [];\n  nextRate: number;\n  disabled: boolean;\n\n  /** Current rating. Can be a decimal value like 3.14 */\n  @Input() rate;\n\n  /** Maximal rating that can be given using this widget. */\n  @Input() max = 5;\n\n  /** A flag indicating if rating can be updated. */\n  @Input() readOnly = false;\n\n  /** Set the theme */\n  @Input() theme = 'default';\n\n  /** Show rating title */\n  @Input() showText = false;\n\n  /** Replace rate value with a title */\n  @Input() titles = [];\n\n  /** A flag indicating if rating is required for form validation. */\n  @Input() required = false;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.rate) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({ length: this.max }, (context, i) => ({\n      selected: false,\n      fraction: false,\n      active: false,\n      click: (e) => this.handleClick(e, i + 1),\n      enter: () => this.handleEnter(i + 1)\n    }));\n\n    this.updateState(this.rate);\n  }\n\n  update(newRate: number, internalChange = true): void {\n    if (!this.readOnly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this.updateState(this.rate);\n  }\n\n  /** Reset rate value */\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this.updateState(this.rate);\n  }\n\n  private updateState(nextValue): void {\n    /** Set rate value as text */\n    this.nextRate = nextValue - 1;\n    /** Set the rating */\n    this.contexts = Array.from({ length: this.max }, (context, index) => ({\n      selected: index + 1 <= nextValue,\n      fraction: (index + 1 === Math.round(nextValue) && nextValue % 1) >= 0.5,\n      active: false,\n      click: (e) => this.handleClick(e, index),\n      enter: () => this.handleEnter(index)\n    }));\n  }\n\n  private handleClick(e, value): void {\n    /** (NOT TESTED) Remove 300ms click delay on touch devices */\n    e.preventDefault();\n    e.stopPropagation();\n    this.update(value + 1);\n  }\n\n  private handleEnter(index): void {\n    if (!this.disabled && !this.readOnly) {\n      /** Add selected class for rating hover */\n      this.contexts.map((context, i) => {\n        context.active = i <= index;\n        context.fraction = false;\n        context.selected = false;\n      });\n      this.nextRate = index;\n      this.hover.emit(index);\n    }\n  }\n\n  /** This is the initial value set to the component */\n  writeValue(value: number): void {\n    this.update(value, false);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  validate(c: FormControl): { required: boolean } | null {\n    return (this.required && !c.value) ? { required: true } : null;\n  }\n\n  onChange = (_: any) => {\n  };\n  onTouched = () => {\n  };\n\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rateTitle'\n})\nexport class BarRatingPipe implements PipeTransform {\n\n  transform(value: number = 0, titles?: any): string {\n    /** Initialize value with 0 in case of undefined */\n    return titles[value] || value + 1;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BarRating } from './bar-rating';\nimport { BarRatingPipe } from './bar-rating.pipe';\n\n@NgModule({\n  declarations: [BarRating, BarRatingPipe],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [BarRating]\n})\nexport class BarRatingModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BarRatingPipe as Éµa} from './lib/bar-rating.pipe';"],"names":[],"mappings":"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"}