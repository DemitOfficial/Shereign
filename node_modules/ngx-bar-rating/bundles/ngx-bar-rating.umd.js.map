{"version":3,"file":"ngx-bar-rating.umd.js","sources":["../../../projects/ngx-bar-rating/src/lib/bar-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.pipe.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.module.ts","../../../projects/ngx-bar-rating/src/ngx-bar-rating.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, Validator, NG_VALIDATORS, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\n/** This allows support [(ngModel)] and ngControl. */\nconst RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BarRating),\n  multi: true\n};\n\n/** This allows control required validation. */\nconst RATING_VALUE_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BarRating),\n  multi: true,\n};\n\n@Component({\n  selector: 'bar-rating',\n  templateUrl: './bar-rating.html',\n  styleUrls: ['./bar-rating.scss'],\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarRating implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  contexts: { fraction: boolean, selected: boolean, active: boolean, click: (e) => void, enter: () => void }[] = [];\n  nextRate: number;\n  disabled: boolean;\n\n  /** Current rating. Can be a decimal value like 3.14 */\n  @Input() rate;\n\n  /** Maximal rating that can be given using this widget. */\n  @Input() max = 5;\n\n  /** A flag indicating if rating can be updated. */\n  @Input() readOnly = false;\n\n  /** Set the theme */\n  @Input() theme = 'default';\n\n  /** Show rating title */\n  @Input() showText = false;\n\n  /** Replace rate value with a title */\n  @Input() titles = [];\n\n  /** A flag indicating if rating is required for form validation. */\n  @Input() required = false;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.rate) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({ length: this.max }, (context, i) => ({\n      selected: false,\n      fraction: false,\n      active: false,\n      click: (e) => this.handleClick(e, i + 1),\n      enter: () => this.handleEnter(i + 1)\n    }));\n\n    this.updateState(this.rate);\n  }\n\n  update(newRate: number, internalChange = true): void {\n    if (!this.readOnly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this.updateState(this.rate);\n  }\n\n  /** Reset rate value */\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this.updateState(this.rate);\n  }\n\n  private updateState(nextValue): void {\n    /** Set rate value as text */\n    this.nextRate = nextValue - 1;\n    /** Set the rating */\n    this.contexts = Array.from({ length: this.max }, (context, index) => ({\n      selected: index + 1 <= nextValue,\n      fraction: (index + 1 === Math.round(nextValue) && nextValue % 1) >= 0.5,\n      active: false,\n      click: (e) => this.handleClick(e, index),\n      enter: () => this.handleEnter(index)\n    }));\n  }\n\n  private handleClick(e, value): void {\n    /** (NOT TESTED) Remove 300ms click delay on touch devices */\n    e.preventDefault();\n    e.stopPropagation();\n    this.update(value + 1);\n  }\n\n  private handleEnter(index): void {\n    if (!this.disabled && !this.readOnly) {\n      /** Add selected class for rating hover */\n      this.contexts.map((context, i) => {\n        context.active = i <= index;\n        context.fraction = false;\n        context.selected = false;\n      });\n      this.nextRate = index;\n      this.hover.emit(index);\n    }\n  }\n\n  /** This is the initial value set to the component */\n  writeValue(value: number): void {\n    this.update(value, false);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  validate(c: FormControl): { required: boolean } | null {\n    return (this.required && !c.value) ? { required: true } : null;\n  }\n\n  onChange = (_: any) => {\n  };\n  onTouched = () => {\n  };\n\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rateTitle'\n})\nexport class BarRatingPipe implements PipeTransform {\n\n  transform(value: number = 0, titles?: any): string {\n    /** Initialize value with 0 in case of undefined */\n    return titles[value] || value + 1;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BarRating } from './bar-rating';\nimport { BarRatingPipe } from './bar-rating.pipe';\n\n@NgModule({\n  declarations: [BarRating, BarRatingPipe],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [BarRating]\n})\nexport class BarRatingModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BarRatingPipe as Éµa} from './lib/bar-rating.pipe';"],"names":["NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","EventEmitter","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","Pipe","NgModule","CommonModule","FormsModule"],"mappings":"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"}