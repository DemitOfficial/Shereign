{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{\"14+f\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"PushNotificationModule\",function(){return PushNotification_module_PushNotificationModule});var common=__webpack_require__(\"ofXK\"),router=__webpack_require__(\"tyNb\"),http=__webpack_require__(\"tk/3\"),core=__webpack_require__(\"fXoL\"),tslib_es6=__webpack_require__(\"mrSG\"),index_cjs=__webpack_require__(\"Wcq6\"),index_cjs_default=__webpack_require__.n(index_cjs),of=__webpack_require__(\"LRne\"),empty=__webpack_require__(\"EY2u\"),throwError=__webpack_require__(\"z6cu\"),Observable=__webpack_require__(\"HDdC\"),concat=__webpack_require__(\"GyhO\"),subscribeOn=__webpack_require__(\"tf+s\"),observeOn=__webpack_require__(\"pxpQ\"),switchMap=__webpack_require__(\"eIep\"),map=__webpack_require__(\"lJxs\"),shareReplay=__webpack_require__(\"UXun\"),switchMapTo=__webpack_require__(\"aGrj\"),catchError=__webpack_require__(\"JIr8\"),mergeMap=__webpack_require__(\"5+tZ\"),defaultIfEmpty=__webpack_require__(\"xbPD\"),angular_fire=__webpack_require__(\"spgP\");const VAPID_KEY=new core.InjectionToken(\"angularfire2.messaging.vapid-key\"),SERVICE_WORKER=new core.InjectionToken(\"angularfire2.messaging.service-worker-registeration\"),firebaseLTv8=parseInt(index_cjs_default.a.SDK_VERSION,10)<8;let angular_fire_messaging_AngularFireMessaging=(()=>{class AngularFireMessaging{constructor(options,nameOrConfig,platformId,zone,vapidKey,_serviceWorker){const schedulers=new angular_fire.d(zone),serviceWorker=_serviceWorker,messaging=Object(of.a)(void 0).pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(()=>Object(common.A)(platformId)?empty.a:__webpack_require__.e(20).then(__webpack_require__.bind(null,\"dB9c\"))),Object(map.a)(()=>Object(angular_fire.g)(options,zone,nameOrConfig)),Object(switchMap.a)(app=>Object(angular_fire.f)(app.name+\".messaging\",\"AngularFireMessaging\",app,()=>Object(tslib_es6.b)(this,void 0,void 0,function*(){const messaging=app.messaging();return firebaseLTv8&&(vapidKey&&messaging.usePublicVapidKey(vapidKey),serviceWorker&&messaging.useServiceWorker(yield serviceWorker)),messaging}),[vapidKey,serviceWorker])),Object(shareReplay.a)({bufferSize:1,refCount:!1}));this.requestPermission=messaging.pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(messaging=>index_cjs_default.a.messaging.isSupported()?messaging.requestPermission():Object(throwError.a)(\"Not supported.\"))),this.getToken=messaging.pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(messaging=>Object(tslib_es6.b)(this,void 0,void 0,function*(){if(index_cjs_default.a.messaging.isSupported()&&\"granted\"===Notification.permission){if(firebaseLTv8)return yield messaging.getToken();{const serviceWorkerRegistration=serviceWorker?yield serviceWorker:null;return yield messaging.getToken({vapidKey:vapidKey,serviceWorkerRegistration:serviceWorkerRegistration})}}return null})));const notificationPermission$=new Observable.a(emitter=>{navigator.permissions.query({name:\"notifications\"}).then(notificationPerm=>{notificationPerm.onchange=()=>emitter.next()})}),tokenChange$=messaging.pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMapTo.a)(notificationPermission$),Object(switchMapTo.a)(this.getToken));return this.tokenChanges=messaging.pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(()=>index_cjs_default.a.messaging.isSupported()?Object(concat.a)(this.getToken,tokenChange$):empty.a)),this.messages=messaging.pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(messaging=>index_cjs_default.a.messaging.isSupported()?new Observable.a(emitter=>messaging.onMessage(next=>emitter.next(next),err=>emitter.error(err),()=>emitter.complete())):empty.a)),this.requestToken=Object(of.a)(void 0).pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(()=>this.requestPermission),Object(catchError.a)(()=>Object(of.a)(null)),Object(mergeMap.b)(()=>this.tokenChanges)),this.deleteToken=token=>messaging.pipe(Object(subscribeOn.a)(schedulers.outsideAngular),Object(observeOn.b)(schedulers.insideAngular),Object(switchMap.a)(messaging=>messaging.deleteToken(token||void 0)),Object(defaultIfEmpty.a)(!1)),Object(angular_fire.i)(this,messaging,zone)}}return AngularFireMessaging.ɵfac=function(t){return new(t||AngularFireMessaging)(core[\"ɵɵinject\"](angular_fire.c),core[\"ɵɵinject\"](angular_fire.b,8),core[\"ɵɵinject\"](core.PLATFORM_ID),core[\"ɵɵinject\"](core.NgZone),core[\"ɵɵinject\"](VAPID_KEY,8),core[\"ɵɵinject\"](SERVICE_WORKER,8))},AngularFireMessaging.ɵprov=Object(core[\"ɵɵdefineInjectable\"])({factory:function(){return new AngularFireMessaging(Object(core[\"ɵɵinject\"])(angular_fire.c),Object(core[\"ɵɵinject\"])(angular_fire.b,8),Object(core[\"ɵɵinject\"])(core.PLATFORM_ID),Object(core[\"ɵɵinject\"])(core.NgZone),Object(core[\"ɵɵinject\"])(VAPID_KEY,8),Object(core[\"ɵɵinject\"])(SERVICE_WORKER,8))},token:AngularFireMessaging,providedIn:\"any\"}),AngularFireMessaging})();Object(angular_fire.e)(angular_fire_messaging_AngularFireMessaging,[{deleteToken:null,getToken:null,onMessage:null,onBackgroundMessage:null,onTokenRefresh:null,requestPermission:null,setBackgroundMessageHandler:null,useServiceWorker:null,usePublicVapidKey:null}]);const routes=[{path:\"send-notification\",component:(()=>{class CreateNotificationComponent{constructor(http,angularFirebaseMessaging){this.http=http,this.angularFirebaseMessaging=angularFirebaseMessaging,this._token=\"DemitTalha\",this.title=\"NotificationTitle\",this.text=\"Notification Text\",this.type=\"Notification\",this.senderid=\"\",this.senderimage=\"\"}ngOnInit(){this.send()}sendPushMessage(){if(this.createuniqueid(),null==this._token)return void console.log(\"Unable to send FCM message, no token exists.\");const body=this.constructFCMPayload(\"/topics/\"+this._token);console.log(this._token);try{var headers_object=new http.d({\"Content-Type\":\"application/json; charset=UTF-8\",Authorization:\"key=AAAAAK4x17k:APA91bEGgK5wCHTH7cKSrhJ8hfEjYpP3S7-xuui7cwxUfGZDeJGBpsvCZNceuMD20DxLsDYKMuHUKmruuk0nBeJpZE1ApwmsJUPX6fWlZj-V-RhYzE72icsycpqmJFcd-Fri9mu662EN\"});return(new http.d).set(\"Authorization\",\"key=AAAAAK4x17k:APA91bEGgK5wCHTH7cKSrhJ8hfEjYpP3S7-xuui7cwxUfGZDeJGBpsvCZNceuMD20DxLsDYKMuHUKmruuk0nBeJpZE1ApwmsJUPX6fWlZj-V-RhYzE72icsycpqmJFcd-Fri9mu662EN\"),this.http.post(\"https://fcm.googleapis.com/fcm/send\",body,{headers:headers_object})}catch(e){console.log(e)}}constructFCMPayload(token){return console.log(this.uniquemessageid),JSON.stringify({to:token,data:{via:\"She Reign\",count:this.uniquemessageid,title:this.title,body:this.text,type:this.type,senderid:this.senderid,senderimage:this.senderimage},notification:{title:this.title,body:this.text}})}createuniqueid(){var number1=Math.floor(999999999e4*Math.random()+1e4);Math.random().toString(36).substring(2,15),Math.random().toString(36).substring(2,15),this.uniquemessageid=(number1+this.text).split(\"\").sort(function(){return.5-Math.random()}).join(\"\")}send(){this.sendPushMessage().subscribe(next=>{console.log(next)})}requestPerm(userName){this.angularFirebaseMessaging.requestToken.subscribe(token=>{console.log(token),this._token=token,localStorage.setItem(\"token\",token)},err=>{console.error(\"No Permission \"+err)})}}return CreateNotificationComponent.ɵfac=function(t){return new(t||CreateNotificationComponent)(core[\"ɵɵdirectiveInject\"](http.b),core[\"ɵɵdirectiveInject\"](angular_fire_messaging_AngularFireMessaging))},CreateNotificationComponent.ɵcmp=core[\"ɵɵdefineComponent\"]({type:CreateNotificationComponent,selectors:[[\"app-CreateNotification\"]],decls:2,vars:0,template:function(rf,ctx){1&rf&&(core[\"ɵɵelementStart\"](0,\"p\"),core[\"ɵɵtext\"](1,\" CreateNotification works!\\n\"),core[\"ɵɵelementEnd\"]())},styles:[\"\"]}),CreateNotificationComponent})()}];let NotificationRoute_routing_NotificationRouteRoutes=(()=>{class NotificationRouteRoutes{}return NotificationRouteRoutes.ɵmod=core[\"ɵɵdefineNgModule\"]({type:NotificationRouteRoutes}),NotificationRouteRoutes.ɵinj=core[\"ɵɵdefineInjector\"]({factory:function(t){return new(t||NotificationRouteRoutes)},imports:[[router.g.forChild(routes)],router.g]}),NotificationRouteRoutes})(),PushNotification_module_PushNotificationModule=(()=>{class PushNotificationModule{}return PushNotificationModule.ɵmod=core[\"ɵɵdefineNgModule\"]({type:PushNotificationModule}),PushNotificationModule.ɵinj=core[\"ɵɵdefineInjector\"]({factory:function(t){return new(t||PushNotificationModule)},imports:[[common.c,NotificationRoute_routing_NotificationRouteRoutes]]}),PushNotificationModule})()}}]);","name":"27-es2015.6ede7b9891b89b32eac7.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[27],{\n\n/***/ \"14+f\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"PushNotificationModule\", function() { return /* binding */ PushNotification_module_PushNotificationModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 3 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js\nvar http = __webpack_require__(\"tk/3\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/firebase/app/dist/index.cjs.js\nvar index_cjs = __webpack_require__(\"Wcq6\");\nvar index_cjs_default = /*#__PURE__*/__webpack_require__.n(index_cjs);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/empty.js\nvar empty = __webpack_require__(\"EY2u\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/throwError.js\nvar throwError = __webpack_require__(\"z6cu\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Observable.js + 1 modules\nvar Observable = __webpack_require__(\"HDdC\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/concat.js\nvar concat = __webpack_require__(\"GyhO\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js + 1 modules\nvar subscribeOn = __webpack_require__(\"tf+s\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/observeOn.js\nvar observeOn = __webpack_require__(\"pxpQ\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/switchMap.js\nvar switchMap = __webpack_require__(\"eIep\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js\nvar shareReplay = __webpack_require__(\"UXun\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/switchMapTo.js\nvar switchMapTo = __webpack_require__(\"aGrj\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/catchError.js\nvar catchError = __webpack_require__(\"JIr8\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/mergeMap.js\nvar mergeMap = __webpack_require__(\"5+tZ\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/defaultIfEmpty.js\nvar defaultIfEmpty = __webpack_require__(\"xbPD\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire.js\nvar angular_fire = __webpack_require__(\"spgP\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-messaging.js\n\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * Generated from: base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\n\nconst proxyPolyfillCompat = {\n    deleteToken: null,\n    getToken: null,\n    onMessage: null,\n    onBackgroundMessage: null,\n    onTokenRefresh: null,\n    requestPermission: null,\n    setBackgroundMessageHandler: null,\n    useServiceWorker: null,\n    usePublicVapidKey: null,\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: messaging.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VAPID_KEY = new core[\"InjectionToken\"]('angularfire2.messaging.vapid-key');\n/** @type {?} */\nconst SERVICE_WORKER = new core[\"InjectionToken\"]('angularfire2.messaging.service-worker-registeration');\n// SEMVER(7): drop\n/** @type {?} */\nconst firebaseLTv8 = parseInt(index_cjs_default.a.SDK_VERSION, 10) < 8;\nlet angular_fire_messaging_AngularFireMessaging = /*@__PURE__*/ (() => {\n    class AngularFireMessaging {\n        /**\n         * @param {?} options\n         * @param {?} nameOrConfig\n         * @param {?} platformId\n         * @param {?} zone\n         * @param {?} vapidKey\n         * @param {?} _serviceWorker\n         */\n        constructor(options, nameOrConfig, \n        // tslint:disable-next-line:ban-types\n        platformId, zone, vapidKey, _serviceWorker) {\n            /** @type {?} */\n            const schedulers = new angular_fire[\"d\" /* ɵAngularFireSchedulers */](zone);\n            /** @type {?} */\n            const serviceWorker = _serviceWorker;\n            /** @type {?} */\n            const messaging = Object(of[\"a\" /* of */])(undefined).pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @return {?}\n             */() => Object(common[\"A\" /* isPlatformServer */])(platformId) ? empty[\"a\" /* EMPTY */] : __webpack_require__.e(/* import() */ 20).then(__webpack_require__.bind(null, \"dB9c\")))), Object(map[\"a\" /* map */])(( /**\n             * @return {?}\n             */() => Object(angular_fire[\"g\" /* ɵfirebaseAppFactory */])(options, zone, nameOrConfig))), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @param {?} app\n             * @return {?}\n             *//**\n             * @param {?} app\n             * @return {?}\n             */ app => Object(angular_fire[\"f\" /* ɵfetchInstance */])(`${app.name}.messaging`, 'AngularFireMessaging', app, ( /**\n             * @return {?}\n             */() => Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function* () {\n                /** @type {?} */\n                const messaging = app.messaging();\n                if (firebaseLTv8) {\n                    if (vapidKey) {\n                        messaging.usePublicVapidKey(vapidKey);\n                    }\n                    if (serviceWorker) {\n                        messaging.useServiceWorker(yield serviceWorker);\n                    }\n                }\n                return messaging;\n            })), [vapidKey, serviceWorker]))), Object(shareReplay[\"a\" /* shareReplay */])({ bufferSize: 1, refCount: false }));\n            this.requestPermission = messaging.pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), \n            // tslint:disable-next-line\n            Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @param {?} messaging\n             * @return {?}\n             *//**\n             * @param {?} messaging\n             * @return {?}\n             */ messaging => index_cjs_default.a.messaging.isSupported() ? messaging.requestPermission() : Object(throwError[\"a\" /* throwError */])('Not supported.'))));\n            this.getToken = messaging.pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @param {?} messaging\n             * @return {?}\n             */(messaging) => Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function* () {\n                if (index_cjs_default.a.messaging.isSupported() && Notification.permission === 'granted') {\n                    if (firebaseLTv8) {\n                        return yield messaging.getToken();\n                    }\n                    else {\n                        /** @type {?} */\n                        const serviceWorkerRegistration = serviceWorker ? yield serviceWorker : null;\n                        return yield messaging.getToken({ vapidKey, serviceWorkerRegistration });\n                    }\n                }\n                else {\n                    return null;\n                }\n            }))));\n            /** @type {?} */\n            const notificationPermission$ = new Observable[\"a\" /* Observable */](( /**\n             * @param {?} emitter\n             * @return {?}\n             *//**\n             * @param {?} emitter\n             * @return {?}\n             */ emitter => {\n                navigator.permissions.query({ name: 'notifications' }).then(( /**\n                 * @param {?} notificationPerm\n                 * @return {?}\n                 *//**\n                 * @param {?} notificationPerm\n                 * @return {?}\n                 */ notificationPerm => {\n                    notificationPerm.onchange = ( /**\n                     * @return {?}\n                     */() => emitter.next());\n                }));\n            }));\n            /** @type {?} */\n            const tokenChange$ = messaging.pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMapTo[\"a\" /* switchMapTo */])(notificationPermission$), Object(switchMapTo[\"a\" /* switchMapTo */])(this.getToken));\n            this.tokenChanges = messaging.pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @return {?}\n             */() => index_cjs_default.a.messaging.isSupported() ? Object(concat[\"a\" /* concat */])(this.getToken, tokenChange$) : empty[\"a\" /* EMPTY */])));\n            this.messages = messaging.pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @param {?} messaging\n             * @return {?}\n             *//**\n             * @param {?} messaging\n             * @return {?}\n             */ messaging => index_cjs_default.a.messaging.isSupported() ? new Observable[\"a\" /* Observable */](( /**\n             * @param {?} emitter\n             * @return {?}\n             *//**\n             * @param {?} emitter\n             * @return {?}\n             */ emitter => messaging.onMessage(( /**\n             * @param {?} next\n             * @return {?}\n             *//**\n             * @param {?} next\n             * @return {?}\n             */ next => emitter.next(next)), ( /**\n             * @param {?} err\n             * @return {?}\n             *//**\n             * @param {?} err\n             * @return {?}\n             */ err => emitter.error(err)), ( /**\n             * @return {?}\n             */() => emitter.complete())))) : empty[\"a\" /* EMPTY */])));\n            this.requestToken = Object(of[\"a\" /* of */])(undefined).pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @return {?}\n             */() => this.requestPermission)), Object(catchError[\"a\" /* catchError */])(( /**\n             * @return {?}\n             */() => Object(of[\"a\" /* of */])(null))), Object(mergeMap[\"b\" /* mergeMap */])(( /**\n             * @return {?}\n             */() => this.tokenChanges)));\n            // SEMVER(7): drop token\n            this.deleteToken = ( /**\n             * @param {?=} token\n             * @return {?}\n             */(token) => messaging.pipe(Object(subscribeOn[\"a\" /* subscribeOn */])(schedulers.outsideAngular), Object(observeOn[\"b\" /* observeOn */])(schedulers.insideAngular), Object(switchMap[\"a\" /* switchMap */])(( /**\n             * @param {?} messaging\n             * @return {?}\n             *//**\n             * @param {?} messaging\n             * @return {?}\n             */ messaging => messaging.deleteToken(token || undefined))), Object(defaultIfEmpty[\"a\" /* defaultIfEmpty */])(false)));\n            return Object(angular_fire[\"i\" /* ɵlazySDKProxy */])(this, messaging, zone);\n        }\n    }\n    AngularFireMessaging.ɵfac = function AngularFireMessaging_Factory(t) { return new (t || AngularFireMessaging)(core[\"ɵɵinject\"](angular_fire[\"c\" /* FIREBASE_OPTIONS */]), core[\"ɵɵinject\"](angular_fire[\"b\" /* FIREBASE_APP_NAME */], 8), core[\"ɵɵinject\"](core[\"PLATFORM_ID\"]), core[\"ɵɵinject\"](core[\"NgZone\"]), core[\"ɵɵinject\"](VAPID_KEY, 8), core[\"ɵɵinject\"](SERVICE_WORKER, 8)); };\n    /** @nocollapse */ AngularFireMessaging.ɵprov = Object(core[\"ɵɵdefineInjectable\"])({ factory: function AngularFireMessaging_Factory() { return new AngularFireMessaging(Object(core[\"ɵɵinject\"])(angular_fire[\"c\" /* FIREBASE_OPTIONS */]), Object(core[\"ɵɵinject\"])(angular_fire[\"b\" /* FIREBASE_APP_NAME */], 8), Object(core[\"ɵɵinject\"])(core[\"PLATFORM_ID\"]), Object(core[\"ɵɵinject\"])(core[\"NgZone\"]), Object(core[\"ɵɵinject\"])(VAPID_KEY, 8), Object(core[\"ɵɵinject\"])(SERVICE_WORKER, 8)); }, token: AngularFireMessaging, providedIn: \"any\" });\n    return AngularFireMessaging;\n})();\nif (false) {}\nObject(angular_fire[\"e\" /* ɵapplyMixins */])(angular_fire_messaging_AngularFireMessaging, [proxyPolyfillCompat]);\nlet angular_fire_messaging_AngularFireMessagingModule = /*@__PURE__*/ (() => {\n    class AngularFireMessagingModule {\n    }\n    AngularFireMessagingModule.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: AngularFireMessagingModule });\n    AngularFireMessagingModule.ɵinj = core[\"ɵɵdefineInjector\"]({ factory: function AngularFireMessagingModule_Factory(t) { return new (t || AngularFireMessagingModule)(); }, providers: [angular_fire_messaging_AngularFireMessaging] });\n    return AngularFireMessagingModule;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * Generated from: angular-fire-messaging.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n//# sourceMappingURL=angular-fire-messaging.js.map\n\n// CONCATENATED MODULE: ./src/app/pages/PushNotification/CreateNotification/CreateNotification.component.ts\n\r\n\r\n\r\n\r\nlet CreateNotification_component_CreateNotificationComponent = /*@__PURE__*/ (() => {\r\n    class CreateNotificationComponent {\r\n        constructor(http, angularFirebaseMessaging) {\r\n            this.http = http;\r\n            this.angularFirebaseMessaging = angularFirebaseMessaging;\r\n            this._token = \"DemitTalha\";\r\n            this.title = \"NotificationTitle\";\r\n            this.text = \"Notification Text\";\r\n            this.type = \"Notification\";\r\n            this.senderid = \"\";\r\n            this.senderimage = \"\";\r\n        }\r\n        ngOnInit() {\r\n            //this.requestPerm('demitofficial@gmail.com')\r\n            this.send();\r\n        }\r\n        sendPushMessage() {\r\n            this.createuniqueid();\r\n            if (this._token == null) {\r\n                console.log('Unable to send FCM message, no token exists.');\r\n                return;\r\n            }\r\n            const body = this.constructFCMPayload('/topics/' + this._token);\r\n            console.log(this._token);\r\n            try {\r\n                var headers_object = new http[\"d\" /* HttpHeaders */]({\r\n                    'Content-Type': 'application/json; charset=UTF-8',\r\n                    'Authorization': 'key=AAAAAK4x17k:APA91bEGgK5wCHTH7cKSrhJ8hfEjYpP3S7-xuui7cwxUfGZDeJGBpsvCZNceuMD20DxLsDYKMuHUKmruuk0nBeJpZE1ApwmsJUPX6fWlZj-V-RhYzE72icsycpqmJFcd-Fri9mu662EN',\r\n                });\r\n                var header = {\r\n                    headers: new http[\"d\" /* HttpHeaders */]()\r\n                        .set('Authorization', 'key=AAAAAK4x17k:APA91bEGgK5wCHTH7cKSrhJ8hfEjYpP3S7-xuui7cwxUfGZDeJGBpsvCZNceuMD20DxLsDYKMuHUKmruuk0nBeJpZE1ApwmsJUPX6fWlZj-V-RhYzE72icsycpqmJFcd-Fri9mu662EN'),\r\n                    body: body\r\n                };\r\n                const httpOptions = {\r\n                    headers: headers_object,\r\n                };\r\n                debugger;\r\n                return this.http.post('https://fcm.googleapis.com/fcm/send', body, httpOptions);\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        /// The API endpoint here accepts a raw FCM payload for demonstration purposes.\r\n        constructFCMPayload(token) {\r\n            debugger;\r\n            console.log(this.uniquemessageid);\r\n            return JSON.stringify({\r\n                'to': token,\r\n                'data': {\r\n                    'via': 'She Reign',\r\n                    'count': this.uniquemessageid,\r\n                    'title': this.title,\r\n                    'body': this.text,\r\n                    'type': this.type,\r\n                    'senderid': this.senderid,\r\n                    'senderimage': this.senderimage\r\n                },\r\n                'notification': {\r\n                    'title': this.title,\r\n                    'body': this.text,\r\n                },\r\n            });\r\n        }\r\n        createuniqueid() {\r\n            var number1 = Math.floor(Math.random() * (9999999999999 - 10000 + 1) + 10000);\r\n            debugger;\r\n            var txt = Math.random().toString(36).substring(2, 15) +\r\n                Math.random().toString(36).substring(2, 15);\r\n            var data = number1 + this.text;\r\n            this.uniquemessageid = data.split('').sort(function () { return 0.5 - Math.random(); }).join('');\r\n        }\r\n        send() {\r\n            this.sendPushMessage().subscribe((next) => {\r\n                debugger;\r\n                console.log(next);\r\n            });\r\n        }\r\n        requestPerm(userName) {\r\n            debugger;\r\n            this.angularFirebaseMessaging.requestToken.subscribe((token) => {\r\n                console.log(token);\r\n                this._token = token;\r\n                localStorage.setItem('token', token);\r\n            }, (err) => {\r\n                console.error(\"No Permission \" + err);\r\n            });\r\n        }\r\n    }\r\n    CreateNotificationComponent.ɵfac = function CreateNotificationComponent_Factory(t) { return new (t || CreateNotificationComponent)(core[\"ɵɵdirectiveInject\"](http[\"b\" /* HttpClient */]), core[\"ɵɵdirectiveInject\"](angular_fire_messaging_AngularFireMessaging)); };\r\n    CreateNotificationComponent.ɵcmp = core[\"ɵɵdefineComponent\"]({ type: CreateNotificationComponent, selectors: [[\"app-CreateNotification\"]], decls: 2, vars: 0, template: function CreateNotificationComponent_Template(rf, ctx) {\r\n            if (rf & 1) {\r\n                core[\"ɵɵelementStart\"](0, \"p\");\r\n                core[\"ɵɵtext\"](1, \" CreateNotification works!\\n\");\r\n                core[\"ɵɵelementEnd\"]();\r\n            }\r\n        }, styles: [\"\"] });\r\n    return CreateNotificationComponent;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/pages/PushNotification/NotificationRoute.routing.ts\n\r\n\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path: 'send-notification',\r\n        component: CreateNotification_component_CreateNotificationComponent\r\n    }\r\n];\r\nlet NotificationRoute_routing_NotificationRouteRoutes = /*@__PURE__*/ (() => {\r\n    class NotificationRouteRoutes {\r\n    }\r\n    NotificationRouteRoutes.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: NotificationRouteRoutes });\r\n    NotificationRouteRoutes.ɵinj = core[\"ɵɵdefineInjector\"]({ factory: function NotificationRouteRoutes_Factory(t) { return new (t || NotificationRouteRoutes)(); }, imports: [[router[\"g\" /* RouterModule */].forChild(routes)], router[\"g\" /* RouterModule */]] });\r\n    return NotificationRouteRoutes;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/pages/PushNotification/PushNotification.module.ts\n\r\n\r\n\r\nlet PushNotification_module_PushNotificationModule = /*@__PURE__*/ (() => {\r\n    class PushNotificationModule {\r\n    }\r\n    PushNotificationModule.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: PushNotificationModule });\r\n    PushNotificationModule.ɵinj = core[\"ɵɵdefineInjector\"]({ factory: function PushNotificationModule_Factory(t) { return new (t || PushNotificationModule)(); }, imports: [[\r\n                common[\"c\" /* CommonModule */],\r\n                NotificationRoute_routing_NotificationRouteRoutes\r\n            ]] });\r\n    return PushNotificationModule;\r\n})();\r\n\n\n/***/ })\n\n}]);","inputSourceMap":null}