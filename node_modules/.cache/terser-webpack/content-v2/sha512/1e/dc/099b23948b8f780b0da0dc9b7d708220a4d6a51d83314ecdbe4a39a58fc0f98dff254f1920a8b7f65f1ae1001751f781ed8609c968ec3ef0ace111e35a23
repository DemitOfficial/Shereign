{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{dB9c:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var index_esm_a,index_cjs=__webpack_require__(\"wj3C\"),index_cjs_default=__webpack_require__.n(index_cjs),dist_index_cjs=__webpack_require__(\"S+S0\"),tslib_es6=__webpack_require__(\"os0x\"),util_dist_index_cjs=__webpack_require__(\"zVF4\"),idb=__webpack_require__(\"nbvr\"),ERROR_DESCRIPTION_MAP=((index_esm_a={})[\"missing-app-config-values\"]='Missing App configuration value: \"{$valueName}\"',index_esm_a[\"not-registered\"]=\"Firebase Installation is not registered.\",index_esm_a[\"installation-not-found\"]=\"Firebase Installation not found.\",index_esm_a[\"request-failed\"]='{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',index_esm_a[\"app-offline\"]=\"Could not process request. Application offline.\",index_esm_a[\"delete-pending-registration\"]=\"Can't delete installation while there is a pending registration request.\",index_esm_a),ERROR_FACTORY=new util_dist_index_cjs.ErrorFactory(\"installations\",\"Installations\",ERROR_DESCRIPTION_MAP);function isServerError(error){return error instanceof util_dist_index_cjs.FirebaseError&&error.code.includes(\"request-failed\")}function getInstallationsEndpoint(_a){return\"https://firebaseinstallations.googleapis.com/v1/projects/\"+_a.projectId+\"/installations\"}function extractAuthTokenInfoFromResponse(response){return{token:response.token,requestStatus:2,expiresIn:(responseExpiresIn=response.expiresIn,Number(responseExpiresIn.replace(\"s\",\"000\"))),creationTime:Date.now()};var responseExpiresIn}function getErrorFromResponse(requestName,response){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var responseJson,errorData;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,response.json()];case 1:return responseJson=_a.sent(),[2,ERROR_FACTORY.create(\"request-failed\",{requestName:requestName,serverCode:(errorData=responseJson.error).code,serverMessage:errorData.message,serverStatus:errorData.status})]}})})}function getHeaders(_a){return new Headers({\"Content-Type\":\"application/json\",Accept:\"application/json\",\"x-goog-api-key\":_a.apiKey})}function getHeadersWithAuth(appConfig,_a){var refreshToken=_a.refreshToken,headers=getHeaders(appConfig);return headers.append(\"Authorization\",function(refreshToken){return\"FIS_v2 \"+refreshToken}(refreshToken)),headers}function retryIfServerError(fn){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var result;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,fn()];case 1:return(result=_a.sent()).status>=500&&result.status<600?[2,fn()]:[2,result]}})})}function createInstallationRequest(appConfig,_a){var fid=_a.fid;return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var endpoint,headers,request,response,responseValue;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return endpoint=getInstallationsEndpoint(appConfig),headers=getHeaders(appConfig),request={method:\"POST\",headers:headers,body:JSON.stringify({fid:fid,authVersion:\"FIS_v2\",appId:appConfig.appId,sdkVersion:\"w:0.4.17\"})},[4,retryIfServerError(function(){return fetch(endpoint,request)})];case 1:return(response=_b.sent()).ok?[4,response.json()]:[3,3];case 2:return[2,{fid:(responseValue=_b.sent()).fid||fid,registrationStatus:2,refreshToken:responseValue.refreshToken,authToken:extractAuthTokenInfoFromResponse(responseValue.authToken)}];case 3:return[4,getErrorFromResponse(\"Create Installation\",response)];case 4:throw _b.sent()}})})}function sleep(ms){return new Promise(function(resolve){setTimeout(resolve,ms)})}var VALID_FID_PATTERN=/^[cdef][\\w-]{21}$/;function generateFid(){try{var fidByteArray=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(fidByteArray),fidByteArray[0]=112+fidByteArray[0]%16;var fid=function(fidByteArray){return(array=fidByteArray,btoa(String.fromCharCode.apply(String,Object(tslib_es6.__spread)(array))).replace(/\\+/g,\"-\").replace(/\\//g,\"_\")).substr(0,22);var array}(fidByteArray);return VALID_FID_PATTERN.test(fid)?fid:\"\"}catch(_a){return\"\"}}function getKey(appConfig){return appConfig.appName+\"!\"+appConfig.appId}var fidChangeCallbacks=new Map;function fidChanged(appConfig,fid){var key=getKey(appConfig);callFidChangeCallbacks(key,fid),function(key,fid){var channel=getBroadcastChannel();channel&&channel.postMessage({key:key,fid:fid}),closeBroadcastChannel()}(key,fid)}function callFidChangeCallbacks(key,fid){var e_1,_a,callbacks=fidChangeCallbacks.get(key);if(callbacks)try{for(var callbacks_1=Object(tslib_es6.__values)(callbacks),callbacks_1_1=callbacks_1.next();!callbacks_1_1.done;callbacks_1_1=callbacks_1.next())(0,callbacks_1_1.value)(fid)}catch(e_1_1){e_1={error:e_1_1}}finally{try{callbacks_1_1&&!callbacks_1_1.done&&(_a=callbacks_1.return)&&_a.call(callbacks_1)}finally{if(e_1)throw e_1.error}}}var broadcastChannel=null;function getBroadcastChannel(){return!broadcastChannel&&\"BroadcastChannel\"in self&&((broadcastChannel=new BroadcastChannel(\"[Firebase] FID Change\")).onmessage=function(e){callFidChangeCallbacks(e.data.key,e.data.fid)}),broadcastChannel}function closeBroadcastChannel(){0===fidChangeCallbacks.size&&broadcastChannel&&(broadcastChannel.close(),broadcastChannel=null)}var instance,dist_index_esm_a,OBJECT_STORE_NAME=\"firebase-installations-store\",dbPromise=null;function getDbPromise(){return dbPromise||(dbPromise=Object(idb.openDb)(\"firebase-installations-database\",1,function(upgradeDB){switch(upgradeDB.oldVersion){case 0:upgradeDB.createObjectStore(OBJECT_STORE_NAME)}})),dbPromise}function set(appConfig,value){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var key,db,tx,objectStore,oldValue;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return key=getKey(appConfig),[4,getDbPromise()];case 1:return db=_a.sent(),tx=db.transaction(OBJECT_STORE_NAME,\"readwrite\"),[4,(objectStore=tx.objectStore(OBJECT_STORE_NAME)).get(key)];case 2:return oldValue=_a.sent(),[4,objectStore.put(value,key)];case 3:return _a.sent(),[4,tx.complete];case 4:return _a.sent(),oldValue&&oldValue.fid===value.fid||fidChanged(appConfig,value.fid),[2,value]}})})}function remove(appConfig){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var key,db,tx;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return key=getKey(appConfig),[4,getDbPromise()];case 1:return db=_a.sent(),[4,(tx=db.transaction(OBJECT_STORE_NAME,\"readwrite\")).objectStore(OBJECT_STORE_NAME).delete(key)];case 2:return _a.sent(),[4,tx.complete];case 3:return _a.sent(),[2]}})})}function update(appConfig,updateFn){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var key,db,tx,store,oldValue,newValue;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return key=getKey(appConfig),[4,getDbPromise()];case 1:return db=_a.sent(),tx=db.transaction(OBJECT_STORE_NAME,\"readwrite\"),[4,(store=tx.objectStore(OBJECT_STORE_NAME)).get(key)];case 2:return oldValue=_a.sent(),void 0!==(newValue=updateFn(oldValue))?[3,4]:[4,store.delete(key)];case 3:return _a.sent(),[3,6];case 4:return[4,store.put(newValue,key)];case 5:_a.sent(),_a.label=6;case 6:return[4,tx.complete];case 7:return _a.sent(),!newValue||oldValue&&oldValue.fid===newValue.fid||fidChanged(appConfig,newValue.fid),[2,newValue]}})})}function getInstallationEntry(appConfig){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var registrationPromise,installationEntry,_a;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return[4,update(appConfig,function(oldEntry){var installationEntry=function(oldEntry){return clearTimedOutRequest(oldEntry||{fid:generateFid(),registrationStatus:0})}(oldEntry),entryWithPromise=function(appConfig,installationEntry){if(0===installationEntry.registrationStatus){if(!navigator.onLine)return{installationEntry:installationEntry,registrationPromise:Promise.reject(ERROR_FACTORY.create(\"app-offline\"))};var inProgressEntry={fid:installationEntry.fid,registrationStatus:1,registrationTime:Date.now()};return{installationEntry:inProgressEntry,registrationPromise:function(appConfig,installationEntry){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var registeredInstallationEntry,e_1;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return _a.trys.push([0,2,,7]),[4,createInstallationRequest(appConfig,installationEntry)];case 1:return registeredInstallationEntry=_a.sent(),[2,set(appConfig,registeredInstallationEntry)];case 2:return isServerError(e_1=_a.sent())&&409===e_1.serverCode?[4,remove(appConfig)]:[3,4];case 3:return _a.sent(),[3,6];case 4:return[4,set(appConfig,{fid:installationEntry.fid,registrationStatus:0})];case 5:_a.sent(),_a.label=6;case 6:throw e_1;case 7:return[2]}})})}(appConfig,inProgressEntry)}}return 1===installationEntry.registrationStatus?{installationEntry:installationEntry,registrationPromise:waitUntilFidRegistration(appConfig)}:{installationEntry:installationEntry}}(appConfig,installationEntry);return registrationPromise=entryWithPromise.registrationPromise,entryWithPromise.installationEntry})];case 1:return\"\"!==(installationEntry=_b.sent()).fid?[3,3]:(_a={},[4,registrationPromise]);case 2:return[2,(_a.installationEntry=_b.sent(),_a)];case 3:return[2,{installationEntry:installationEntry,registrationPromise:registrationPromise}]}})})}function waitUntilFidRegistration(appConfig){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var entry,_a,installationEntry,registrationPromise;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return[4,updateInstallationRequest(appConfig)];case 1:entry=_b.sent(),_b.label=2;case 2:return 1!==entry.registrationStatus?[3,5]:[4,sleep(100)];case 3:return _b.sent(),[4,updateInstallationRequest(appConfig)];case 4:return entry=_b.sent(),[3,2];case 5:return 0!==entry.registrationStatus?[3,7]:[4,getInstallationEntry(appConfig)];case 6:return _a=_b.sent(),installationEntry=_a.installationEntry,(registrationPromise=_a.registrationPromise)?[2,registrationPromise]:[2,installationEntry];case 7:return[2,entry]}})})}function updateInstallationRequest(appConfig){return update(appConfig,function(oldEntry){if(!oldEntry)throw ERROR_FACTORY.create(\"installation-not-found\");return clearTimedOutRequest(oldEntry)})}function clearTimedOutRequest(entry){return 1===(installationEntry=entry).registrationStatus&&installationEntry.registrationTime+1e4<Date.now()?{fid:entry.fid,registrationStatus:0}:entry;var installationEntry}function generateAuthTokenRequest(_a,installationEntry){var appConfig=_a.appConfig,platformLoggerProvider=_a.platformLoggerProvider;return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var endpoint,headers,platformLogger,request,response;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return endpoint=function(appConfig,_a){var fid=_a.fid;return getInstallationsEndpoint(appConfig)+\"/\"+fid+\"/authTokens:generate\"}(appConfig,installationEntry),headers=getHeadersWithAuth(appConfig,installationEntry),(platformLogger=platformLoggerProvider.getImmediate({optional:!0}))&&headers.append(\"x-firebase-client\",platformLogger.getPlatformInfoString()),request={method:\"POST\",headers:headers,body:JSON.stringify({installation:{sdkVersion:\"w:0.4.17\"}})},[4,retryIfServerError(function(){return fetch(endpoint,request)})];case 1:return(response=_b.sent()).ok?[4,response.json()]:[3,3];case 2:return[2,extractAuthTokenInfoFromResponse(_b.sent())];case 3:return[4,getErrorFromResponse(\"Generate Auth Token\",response)];case 4:throw _b.sent()}})})}function refreshAuthToken(dependencies,forceRefresh){return void 0===forceRefresh&&(forceRefresh=!1),Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var tokenPromise,entry,_a;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return[4,update(dependencies.appConfig,function(oldEntry){if(!isEntryRegistered(oldEntry))throw ERROR_FACTORY.create(\"not-registered\");var authToken,oldAuthToken=oldEntry.authToken;if(!forceRefresh&&2===(authToken=oldAuthToken).requestStatus&&!function(authToken){var now=Date.now();return now<authToken.creationTime||authToken.creationTime+authToken.expiresIn<now+36e5}(authToken))return oldEntry;if(1===oldAuthToken.requestStatus)return tokenPromise=function(dependencies,forceRefresh){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var entry,authToken;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,updateAuthTokenRequest(dependencies.appConfig)];case 1:entry=_a.sent(),_a.label=2;case 2:return 1!==entry.authToken.requestStatus?[3,5]:[4,sleep(100)];case 3:return _a.sent(),[4,updateAuthTokenRequest(dependencies.appConfig)];case 4:return entry=_a.sent(),[3,2];case 5:return 0===(authToken=entry.authToken).requestStatus?[2,refreshAuthToken(dependencies,forceRefresh)]:[2,authToken]}})})}(dependencies,forceRefresh),oldEntry;if(!navigator.onLine)throw ERROR_FACTORY.create(\"app-offline\");var inProgressEntry=function(oldEntry){var inProgressAuthToken={requestStatus:1,requestTime:Date.now()};return Object(tslib_es6.__assign)(Object(tslib_es6.__assign)({},oldEntry),{authToken:inProgressAuthToken})}(oldEntry);return tokenPromise=function(dependencies,installationEntry){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var authToken,e_1,updatedInstallationEntry;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return _a.trys.push([0,3,,8]),[4,generateAuthTokenRequest(dependencies,installationEntry)];case 1:return authToken=_a.sent(),updatedInstallationEntry=Object(tslib_es6.__assign)(Object(tslib_es6.__assign)({},installationEntry),{authToken:authToken}),[4,set(dependencies.appConfig,updatedInstallationEntry)];case 2:return _a.sent(),[2,authToken];case 3:return!isServerError(e_1=_a.sent())||401!==e_1.serverCode&&404!==e_1.serverCode?[3,5]:[4,remove(dependencies.appConfig)];case 4:return _a.sent(),[3,7];case 5:return updatedInstallationEntry=Object(tslib_es6.__assign)(Object(tslib_es6.__assign)({},installationEntry),{authToken:{requestStatus:0}}),[4,set(dependencies.appConfig,updatedInstallationEntry)];case 6:_a.sent(),_a.label=7;case 7:throw e_1;case 8:return[2]}})})}(dependencies,inProgressEntry),inProgressEntry})];case 1:return entry=_b.sent(),tokenPromise?[4,tokenPromise]:[3,3];case 2:return _a=_b.sent(),[3,4];case 3:_a=entry.authToken,_b.label=4;case 4:return[2,_a]}})})}function updateAuthTokenRequest(appConfig){return update(appConfig,function(oldEntry){if(!isEntryRegistered(oldEntry))throw ERROR_FACTORY.create(\"not-registered\");var authToken;return 1===(authToken=oldEntry.authToken).requestStatus&&authToken.requestTime+1e4<Date.now()?Object(tslib_es6.__assign)(Object(tslib_es6.__assign)({},oldEntry),{authToken:{requestStatus:0}}):oldEntry})}function isEntryRegistered(installationEntry){return void 0!==installationEntry&&2===installationEntry.registrationStatus}function completeInstallationRegistration(appConfig){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var registrationPromise;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,getInstallationEntry(appConfig)];case 1:return(registrationPromise=_a.sent().registrationPromise)?[4,registrationPromise]:[3,3];case 2:_a.sent(),_a.label=3;case 3:return[2]}})})}function deleteInstallationRequest(appConfig,installationEntry){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var endpoint,headers,request,response;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return endpoint=function(appConfig,_a){var fid=_a.fid;return getInstallationsEndpoint(appConfig)+\"/\"+fid}(appConfig,installationEntry),headers=getHeadersWithAuth(appConfig,installationEntry),request={method:\"DELETE\",headers:headers},[4,retryIfServerError(function(){return fetch(endpoint,request)})];case 1:return(response=_a.sent()).ok?[3,3]:[4,getErrorFromResponse(\"Delete Installation\",response)];case 2:throw _a.sent();case 3:return[2]}})})}function getMissingValueError(valueName){return ERROR_FACTORY.create(\"missing-app-config-values\",{valueName:valueName})}(instance=index_cjs_default.a).INTERNAL.registerComponent(new dist_index_cjs.Component(\"installations\",function(container){var app=container.getProvider(\"app\").getImmediate(),dependencies={appConfig:function(app){var e_1,_a;if(!app||!app.options)throw getMissingValueError(\"App Configuration\");if(!app.name)throw getMissingValueError(\"App Name\");try{for(var configKeys_1=Object(tslib_es6.__values)([\"projectId\",\"apiKey\",\"appId\"]),configKeys_1_1=configKeys_1.next();!configKeys_1_1.done;configKeys_1_1=configKeys_1.next()){var keyName=configKeys_1_1.value;if(!app.options[keyName])throw getMissingValueError(keyName)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{configKeys_1_1&&!configKeys_1_1.done&&(_a=configKeys_1.return)&&_a.call(configKeys_1)}finally{if(e_1)throw e_1.error}}return{appName:app.name,projectId:app.options.projectId,apiKey:app.options.apiKey,appId:app.options.appId}}(app),platformLoggerProvider:container.getProvider(\"platform-logger\")};return{app:app,getId:function(){return function(dependencies){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var _a,installationEntry,registrationPromise;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return[4,getInstallationEntry(dependencies.appConfig)];case 1:return _a=_b.sent(),installationEntry=_a.installationEntry,(registrationPromise=_a.registrationPromise)?registrationPromise.catch(console.error):refreshAuthToken(dependencies).catch(console.error),[2,installationEntry.fid]}})})}(dependencies)},getToken:function(forceRefresh){return function(dependencies,forceRefresh){return void 0===forceRefresh&&(forceRefresh=!1),Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,completeInstallationRegistration(dependencies.appConfig)];case 1:return _a.sent(),[4,refreshAuthToken(dependencies,forceRefresh)];case 2:return[2,_a.sent().token]}})})}(dependencies,forceRefresh)},delete:function(){return function(dependencies){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var appConfig,entry;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,update(appConfig=dependencies.appConfig,function(oldEntry){if(!oldEntry||0!==oldEntry.registrationStatus)return oldEntry})];case 1:if(!(entry=_a.sent()))return[3,6];if(1!==entry.registrationStatus)return[3,2];throw ERROR_FACTORY.create(\"delete-pending-registration\");case 2:if(2!==entry.registrationStatus)return[3,6];if(navigator.onLine)return[3,3];throw ERROR_FACTORY.create(\"app-offline\");case 3:return[4,deleteInstallationRequest(appConfig,entry)];case 4:return _a.sent(),[4,remove(appConfig)];case 5:_a.sent(),_a.label=6;case 6:return[2]}})})}(dependencies)},onIdChange:function(callback){return function(_a,callback){var appConfig=_a.appConfig;return function(appConfig,callback){getBroadcastChannel();var key=getKey(appConfig),callbackSet=fidChangeCallbacks.get(key);callbackSet||(callbackSet=new Set,fidChangeCallbacks.set(key,callbackSet)),callbackSet.add(callback)}(appConfig,callback),function(){!function(appConfig,callback){var key=getKey(appConfig),callbackSet=fidChangeCallbacks.get(key);callbackSet&&(callbackSet.delete(callback),0===callbackSet.size&&fidChangeCallbacks.delete(key),closeBroadcastChannel())}(appConfig,callback)}}(dependencies,callback)}}},\"PUBLIC\")),instance.registerVersion(\"@firebase/installations\",\"0.4.17\");var ERROR_MAP=((dist_index_esm_a={})[\"missing-app-config-values\"]='Missing App configuration value: \"{$valueName}\"',dist_index_esm_a[\"only-available-in-window\"]=\"This method is available in a Window context.\",dist_index_esm_a[\"only-available-in-sw\"]=\"This method is available in a service worker context.\",dist_index_esm_a[\"permission-default\"]=\"The notification permission was not granted and dismissed instead.\",dist_index_esm_a[\"permission-blocked\"]=\"The notification permission was not granted and blocked instead.\",dist_index_esm_a[\"unsupported-browser\"]=\"This browser doesn't support the API's required to use the firebase SDK.\",dist_index_esm_a[\"failed-service-worker-registration\"]=\"We are unable to register the default service worker. {$browserErrorMessage}\",dist_index_esm_a[\"token-subscribe-failed\"]=\"A problem occurred while subscribing the user to FCM: {$errorInfo}\",dist_index_esm_a[\"token-subscribe-no-token\"]=\"FCM returned no token when subscribing the user to push.\",dist_index_esm_a[\"token-unsubscribe-failed\"]=\"A problem occurred while unsubscribing the user from FCM: {$errorInfo}\",dist_index_esm_a[\"token-update-failed\"]=\"A problem occurred while updating the user from FCM: {$errorInfo}\",dist_index_esm_a[\"token-update-no-token\"]=\"FCM returned no token when updating the user to push.\",dist_index_esm_a[\"use-sw-after-get-token\"]=\"The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.\",dist_index_esm_a[\"invalid-sw-registration\"]=\"The input to useServiceWorker() must be a ServiceWorkerRegistration.\",dist_index_esm_a[\"invalid-bg-handler\"]=\"The input to setBackgroundMessageHandler() must be a function.\",dist_index_esm_a[\"invalid-vapid-key\"]=\"The public VAPID key must be a string.\",dist_index_esm_a[\"use-vapid-key-after-get-token\"]=\"The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.\",dist_index_esm_a),index_esm_ERROR_FACTORY=new util_dist_index_cjs.ErrorFactory(\"messaging\",\"Messaging\",ERROR_MAP),DEFAULT_VAPID_KEY=\"BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4\",MessageType=function(MessageType){return MessageType.PUSH_RECEIVED=\"push-received\",MessageType.NOTIFICATION_CLICKED=\"notification-clicked\",MessageType}({});function arrayToBase64(array){var uint8Array=new Uint8Array(array);return btoa(String.fromCharCode.apply(String,Object(tslib_es6.__spread)(uint8Array))).replace(/=/g,\"\").replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}function base64ToArray(base64String){for(var base64=(base64String+\"=\".repeat((4-base64String.length%4)%4)).replace(/\\-/g,\"+\").replace(/_/g,\"/\"),rawData=atob(base64),outputArray=new Uint8Array(rawData.length),i=0;i<rawData.length;++i)outputArray[i]=rawData.charCodeAt(i);return outputArray}function migrateOldDatabase(senderId){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var tokenDetails,_this=this;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return\"databases\"in indexedDB?[4,indexedDB.databases()]:[3,2];case 1:if(!_a.sent().map(function(db){return db.name}).includes(\"fcm_token_details_db\"))return[2,null];_a.label=2;case 2:return tokenDetails=null,[4,Object(idb.openDb)(\"fcm_token_details_db\",5,function(db){return Object(tslib_es6.__awaiter)(_this,void 0,void 0,function(){var objectStore,value,oldDetails,_a;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return db.oldVersion<2?[2]:db.objectStoreNames.contains(\"fcm_token_object_Store\")?[4,(objectStore=db.transaction.objectStore(\"fcm_token_object_Store\")).index(\"fcmSenderId\").get(senderId)]:[2];case 1:return value=_b.sent(),[4,objectStore.clear()];case 2:if(_b.sent(),!value)return[2];if(2===db.oldVersion){if(!(oldDetails=value).auth||!oldDetails.p256dh||!oldDetails.endpoint)return[2];tokenDetails={token:oldDetails.fcmToken,createTime:null!==(_a=oldDetails.createTime)&&void 0!==_a?_a:Date.now(),subscriptionOptions:{auth:oldDetails.auth,p256dh:oldDetails.p256dh,endpoint:oldDetails.endpoint,swScope:oldDetails.swScope,vapidKey:\"string\"==typeof oldDetails.vapidKey?oldDetails.vapidKey:arrayToBase64(oldDetails.vapidKey)}}}else(3===db.oldVersion||4===db.oldVersion)&&(tokenDetails={token:(oldDetails=value).fcmToken,createTime:oldDetails.createTime,subscriptionOptions:{auth:arrayToBase64(oldDetails.auth),p256dh:arrayToBase64(oldDetails.p256dh),endpoint:oldDetails.endpoint,swScope:oldDetails.swScope,vapidKey:arrayToBase64(oldDetails.vapidKey)}});return[2]}})})})];case 3:return _a.sent().close(),[4,Object(idb.deleteDb)(\"fcm_token_details_db\")];case 4:return _a.sent(),[4,Object(idb.deleteDb)(\"fcm_vapid_details_db\")];case 5:return _a.sent(),[4,Object(idb.deleteDb)(\"undefined\")];case 6:return _a.sent(),[2,checkTokenDetails(tokenDetails)?tokenDetails:null]}})})}function checkTokenDetails(tokenDetails){if(!tokenDetails||!tokenDetails.subscriptionOptions)return!1;var subscriptionOptions=tokenDetails.subscriptionOptions;return\"number\"==typeof tokenDetails.createTime&&tokenDetails.createTime>0&&\"string\"==typeof tokenDetails.token&&tokenDetails.token.length>0&&\"string\"==typeof subscriptionOptions.auth&&subscriptionOptions.auth.length>0&&\"string\"==typeof subscriptionOptions.p256dh&&subscriptionOptions.p256dh.length>0&&\"string\"==typeof subscriptionOptions.endpoint&&subscriptionOptions.endpoint.length>0&&\"string\"==typeof subscriptionOptions.swScope&&subscriptionOptions.swScope.length>0&&\"string\"==typeof subscriptionOptions.vapidKey&&subscriptionOptions.vapidKey.length>0}var index_esm_dbPromise=null;function index_esm_getDbPromise(){return index_esm_dbPromise||(index_esm_dbPromise=Object(idb.openDb)(\"firebase-messaging-database\",1,function(upgradeDb){switch(upgradeDb.oldVersion){case 0:upgradeDb.createObjectStore(\"firebase-messaging-store\")}})),index_esm_dbPromise}function dbGet(firebaseDependencies){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var key,tokenDetails,oldTokenDetails;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return key=index_esm_getKey(firebaseDependencies),[4,index_esm_getDbPromise()];case 1:return[4,_a.sent().transaction(\"firebase-messaging-store\").objectStore(\"firebase-messaging-store\").get(key)];case 2:return(tokenDetails=_a.sent())?[2,tokenDetails]:[3,3];case 3:return[4,migrateOldDatabase(firebaseDependencies.appConfig.senderId)];case 4:return(oldTokenDetails=_a.sent())?[4,dbSet(firebaseDependencies,oldTokenDetails)]:[3,6];case 5:return _a.sent(),[2,oldTokenDetails];case 6:return[2]}})})}function dbSet(firebaseDependencies,tokenDetails){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var key,db,tx;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return key=index_esm_getKey(firebaseDependencies),[4,index_esm_getDbPromise()];case 1:return db=_a.sent(),[4,(tx=db.transaction(\"firebase-messaging-store\",\"readwrite\")).objectStore(\"firebase-messaging-store\").put(tokenDetails,key)];case 2:return _a.sent(),[4,tx.complete];case 3:return _a.sent(),[2,tokenDetails]}})})}function dbRemove(firebaseDependencies){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var key,db,tx;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return key=index_esm_getKey(firebaseDependencies),[4,index_esm_getDbPromise()];case 1:return db=_a.sent(),[4,(tx=db.transaction(\"firebase-messaging-store\",\"readwrite\")).objectStore(\"firebase-messaging-store\").delete(key)];case 2:return _a.sent(),[4,tx.complete];case 3:return _a.sent(),[2]}})})}function index_esm_getKey(_a){return _a.appConfig.appId}function requestGetToken(firebaseDependencies,subscriptionOptions){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var headers,body,subscribeOptions,responseData,err_1;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,index_esm_getHeaders(firebaseDependencies)];case 1:headers=_a.sent(),body=getBody(subscriptionOptions),subscribeOptions={method:\"POST\",headers:headers,body:JSON.stringify(body)},_a.label=2;case 2:return _a.trys.push([2,5,,6]),[4,fetch(getEndpoint(firebaseDependencies.appConfig),subscribeOptions)];case 3:return[4,_a.sent().json()];case 4:return responseData=_a.sent(),[3,6];case 5:throw err_1=_a.sent(),index_esm_ERROR_FACTORY.create(\"token-subscribe-failed\",{errorInfo:err_1});case 6:if(responseData.error)throw index_esm_ERROR_FACTORY.create(\"token-subscribe-failed\",{errorInfo:responseData.error.message});if(!responseData.token)throw index_esm_ERROR_FACTORY.create(\"token-subscribe-no-token\");return[2,responseData.token]}})})}function requestUpdateToken(firebaseDependencies,tokenDetails){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var headers,body,updateOptions,responseData,err_2;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,index_esm_getHeaders(firebaseDependencies)];case 1:headers=_a.sent(),body=getBody(tokenDetails.subscriptionOptions),updateOptions={method:\"PATCH\",headers:headers,body:JSON.stringify(body)},_a.label=2;case 2:return _a.trys.push([2,5,,6]),[4,fetch(getEndpoint(firebaseDependencies.appConfig)+\"/\"+tokenDetails.token,updateOptions)];case 3:return[4,_a.sent().json()];case 4:return responseData=_a.sent(),[3,6];case 5:throw err_2=_a.sent(),index_esm_ERROR_FACTORY.create(\"token-update-failed\",{errorInfo:err_2});case 6:if(responseData.error)throw index_esm_ERROR_FACTORY.create(\"token-update-failed\",{errorInfo:responseData.error.message});if(!responseData.token)throw index_esm_ERROR_FACTORY.create(\"token-update-no-token\");return[2,responseData.token]}})})}function requestDeleteToken(firebaseDependencies,token){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var headers,unsubscribeOptions,responseData,err_3;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,index_esm_getHeaders(firebaseDependencies)];case 1:headers=_a.sent(),unsubscribeOptions={method:\"DELETE\",headers:headers},_a.label=2;case 2:return _a.trys.push([2,5,,6]),[4,fetch(getEndpoint(firebaseDependencies.appConfig)+\"/\"+token,unsubscribeOptions)];case 3:return[4,_a.sent().json()];case 4:if((responseData=_a.sent()).error)throw index_esm_ERROR_FACTORY.create(\"token-unsubscribe-failed\",{errorInfo:responseData.error.message});return[3,6];case 5:throw err_3=_a.sent(),index_esm_ERROR_FACTORY.create(\"token-unsubscribe-failed\",{errorInfo:err_3});case 6:return[2]}})})}function getEndpoint(_a){return\"https://fcmregistrations.googleapis.com/v1/projects/\"+_a.projectId+\"/registrations\"}function index_esm_getHeaders(_a){var appConfig=_a.appConfig,installations=_a.installations;return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var authToken;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return[4,installations.getToken()];case 1:return authToken=_b.sent(),[2,new Headers({\"Content-Type\":\"application/json\",Accept:\"application/json\",\"x-goog-api-key\":appConfig.apiKey,\"x-goog-firebase-installations-auth\":\"FIS \"+authToken})]}})})}function getBody(_a){var vapidKey=_a.vapidKey,body={web:{endpoint:_a.endpoint,auth:_a.auth,p256dh:_a.p256dh}};return vapidKey!==DEFAULT_VAPID_KEY&&(body.web.applicationPubKey=vapidKey),body}function index_esm_getToken(firebaseDependencies,swRegistration,vapidKey){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var pushSubscription,tokenDetails,subscriptionOptions,e_1;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:if(\"granted\"!==Notification.permission)throw index_esm_ERROR_FACTORY.create(\"permission-blocked\");return[4,getPushSubscription(swRegistration,vapidKey)];case 1:return pushSubscription=_a.sent(),[4,dbGet(firebaseDependencies)];case 2:return tokenDetails=_a.sent(),subscriptionOptions={vapidKey:vapidKey,swScope:swRegistration.scope,endpoint:pushSubscription.endpoint,auth:arrayToBase64(pushSubscription.getKey(\"auth\")),p256dh:arrayToBase64(pushSubscription.getKey(\"p256dh\"))},tokenDetails?[3,3]:[2,getNewToken(firebaseDependencies,subscriptionOptions)];case 3:if(isEndpointEqual=(currentOptions=subscriptionOptions).endpoint===(dbOptions=tokenDetails.subscriptionOptions).endpoint,currentOptions.vapidKey===dbOptions.vapidKey&&isEndpointEqual&&currentOptions.auth===dbOptions.auth&&currentOptions.p256dh===dbOptions.p256dh)return[3,8];_a.label=4;case 4:return _a.trys.push([4,6,,7]),[4,requestDeleteToken(firebaseDependencies,tokenDetails.token)];case 5:return _a.sent(),[3,7];case 6:return e_1=_a.sent(),console.warn(e_1),[3,7];case 7:return[2,getNewToken(firebaseDependencies,subscriptionOptions)];case 8:return Date.now()>=tokenDetails.createTime+6048e5?[2,updateToken({token:tokenDetails.token,createTime:Date.now(),subscriptionOptions:subscriptionOptions},firebaseDependencies,swRegistration)]:[2,tokenDetails.token];case 9:return[2]}var dbOptions,currentOptions,isEndpointEqual})})}function deleteToken(firebaseDependencies,swRegistration){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var tokenDetails,pushSubscription;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,dbGet(firebaseDependencies)];case 1:return(tokenDetails=_a.sent())?[4,requestDeleteToken(firebaseDependencies,tokenDetails.token)]:[3,4];case 2:return _a.sent(),[4,dbRemove(firebaseDependencies)];case 3:_a.sent(),_a.label=4;case 4:return[4,swRegistration.pushManager.getSubscription()];case 5:return(pushSubscription=_a.sent())?[2,pushSubscription.unsubscribe()]:[2,!0]}})})}function updateToken(tokenDetails,firebaseDependencies,swRegistration){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var updatedToken,updatedTokenDetails,e_2;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return _a.trys.push([0,3,,5]),[4,requestUpdateToken(firebaseDependencies,tokenDetails)];case 1:return updatedToken=_a.sent(),updatedTokenDetails=Object(tslib_es6.__assign)(Object(tslib_es6.__assign)({},tokenDetails),{token:updatedToken,createTime:Date.now()}),[4,dbSet(firebaseDependencies,updatedTokenDetails)];case 2:return _a.sent(),[2,updatedToken];case 3:return e_2=_a.sent(),[4,deleteToken(firebaseDependencies,swRegistration)];case 4:throw _a.sent(),e_2;case 5:return[2]}})})}function getNewToken(firebaseDependencies,subscriptionOptions){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var token,tokenDetails;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,requestGetToken(firebaseDependencies,subscriptionOptions)];case 1:return token=_a.sent(),tokenDetails={token:token,createTime:Date.now(),subscriptionOptions:subscriptionOptions},[4,dbSet(firebaseDependencies,tokenDetails)];case 2:return _a.sent(),[2,tokenDetails.token]}})})}function getPushSubscription(swRegistration,vapidKey){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var subscription;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return[4,swRegistration.pushManager.getSubscription()];case 1:return(subscription=_a.sent())?[2,subscription]:[2,swRegistration.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:base64ToArray(vapidKey)})]}})})}function isConsoleMessage(data){return\"object\"==typeof data&&!!data&&\"google.c.a.c_id\"in data}var index_esm_SwController=function(){function SwController(firebaseDependencies){var _this=this;this.firebaseDependencies=firebaseDependencies,this.isOnBackgroundMessageUsed=null,this.vapidKey=null,this.bgMessageHandler=null,self.addEventListener(\"push\",function(e){e.waitUntil(_this.onPush(e))}),self.addEventListener(\"pushsubscriptionchange\",function(e){e.waitUntil(_this.onSubChange(e))}),self.addEventListener(\"notificationclick\",function(e){e.waitUntil(_this.onNotificationClick(e))})}return Object.defineProperty(SwController.prototype,\"app\",{get:function(){return this.firebaseDependencies.app},enumerable:!1,configurable:!0}),SwController.prototype.setBackgroundMessageHandler=function(callback){if(this.isOnBackgroundMessageUsed=!1,!callback||\"function\"!=typeof callback)throw index_esm_ERROR_FACTORY.create(\"invalid-bg-handler\");this.bgMessageHandler=callback},SwController.prototype.onBackgroundMessage=function(nextOrObserver){var _this=this;return this.isOnBackgroundMessageUsed=!0,this.bgMessageHandler=nextOrObserver,function(){_this.bgMessageHandler=null}},SwController.prototype.getToken=function(){var _a,_b;return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var tokenDetails;return Object(tslib_es6.__generator)(this,function(_c){switch(_c.label){case 0:return this.vapidKey?[3,2]:[4,dbGet(this.firebaseDependencies)];case 1:tokenDetails=_c.sent(),this.vapidKey=null!==(_b=null===(_a=null==tokenDetails?void 0:tokenDetails.subscriptionOptions)||void 0===_a?void 0:_a.vapidKey)&&void 0!==_b?_b:DEFAULT_VAPID_KEY,_c.label=2;case 2:return[2,index_esm_getToken(this.firebaseDependencies,self.registration,this.vapidKey)]}})})},SwController.prototype.deleteToken=function(){return deleteToken(this.firebaseDependencies,self.registration)},SwController.prototype.requestPermission=function(){throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\")},SwController.prototype.usePublicVapidKey=function(vapidKey){if(null!==this.vapidKey)throw index_esm_ERROR_FACTORY.create(\"use-vapid-key-after-get-token\");if(\"string\"!=typeof vapidKey||0===vapidKey.length)throw index_esm_ERROR_FACTORY.create(\"invalid-vapid-key\");this.vapidKey=vapidKey},SwController.prototype.useServiceWorker=function(){throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\")},SwController.prototype.onMessage=function(){throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\")},SwController.prototype.onTokenRefresh=function(){throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\")},SwController.prototype.onPush=function(event){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var internalPayload,clientList,isNotificationShown,payload;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return(internalPayload=function(_a){var data=_a.data;if(!data)return null;try{return data.json()}catch(err){return null}}(event))?[4,getClientList()]:(console.debug(\"FirebaseMessaging: failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\"),[2]);case 1:return function(clientList){return clientList.some(function(client){return\"visible\"===client.visibilityState&&!client.url.startsWith(\"chrome-extension://\")})}(clientList=_a.sent())?[2,sendMessagePayloadInternalToWindows(clientList,internalPayload)]:(isNotificationShown=!1,internalPayload.notification?[4,showNotification(wrapInternalPayload(internalPayload))]:[3,3]);case 2:_a.sent(),isNotificationShown=!0,_a.label=3;case 3:return!0===isNotificationShown&&!1===this.isOnBackgroundMessageUsed||this.bgMessageHandler&&(payload=function(internalPayload){var payload={from:internalPayload.from,collapseKey:internalPayload.collapse_key};return function(payload,messagePayloadInternal){if(messagePayloadInternal.notification){payload.notification={};var title=messagePayloadInternal.notification.title;title&&(payload.notification.title=title);var body=messagePayloadInternal.notification.body;body&&(payload.notification.body=body);var image=messagePayloadInternal.notification.image;image&&(payload.notification.image=image)}}(payload,internalPayload),function(payload,messagePayloadInternal){messagePayloadInternal.data&&(payload.data=messagePayloadInternal.data)}(payload,internalPayload),function(payload,messagePayloadInternal){if(messagePayloadInternal.fcmOptions){payload.fcmOptions={};var link=messagePayloadInternal.fcmOptions.link;link&&(payload.fcmOptions.link=link);var analyticsLabel=messagePayloadInternal.fcmOptions.analytics_label;analyticsLabel&&(payload.fcmOptions.analyticsLabel=analyticsLabel)}}(payload,internalPayload),payload}(internalPayload),\"function\"==typeof this.bgMessageHandler?this.bgMessageHandler(payload):this.bgMessageHandler.next(payload)),[2]}})})},SwController.prototype.onSubChange=function(event){var _a,_b;return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var tokenDetails;return Object(tslib_es6.__generator)(this,function(_c){switch(_c.label){case 0:return event.newSubscription?[3,2]:[4,deleteToken(this.firebaseDependencies,self.registration)];case 1:return _c.sent(),[2];case 2:return[4,dbGet(this.firebaseDependencies)];case 3:return tokenDetails=_c.sent(),[4,deleteToken(this.firebaseDependencies,self.registration)];case 4:return _c.sent(),[4,index_esm_getToken(this.firebaseDependencies,self.registration,null!==(_b=null===(_a=null==tokenDetails?void 0:tokenDetails.subscriptionOptions)||void 0===_a?void 0:_a.vapidKey)&&void 0!==_b?_b:DEFAULT_VAPID_KEY)];case 5:return _c.sent(),[2]}})})},SwController.prototype.onNotificationClick=function(event){var _a,_b;return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var internalPayload,link,url,originUrl,client;return Object(tslib_es6.__generator)(this,function(_c){switch(_c.label){case 0:return(internalPayload=null===(_b=null===(_a=event.notification)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.FCM_MSG)?event.action?[2]:(event.stopImmediatePropagation(),event.notification.close(),(link=function(payload){var _a,_b,_c;return(null!==(_b=null===(_a=payload.fcmOptions)||void 0===_a?void 0:_a.link)&&void 0!==_b?_b:null===(_c=payload.notification)||void 0===_c?void 0:_c.click_action)||(isConsoleMessage(payload.data)?self.location.origin:null)}(internalPayload))?(url=new URL(link,self.location.href),originUrl=new URL(self.location.origin),url.host!==originUrl.host?[2]:[4,getWindowClient(url)]):[2]):[2];case 1:return(client=_c.sent())?[3,4]:[4,self.clients.openWindow(link)];case 2:return client=_c.sent(),[4,new Promise(function(resolve){setTimeout(resolve,3e3)})];case 3:return _c.sent(),[3,6];case 4:return[4,client.focus()];case 5:client=_c.sent(),_c.label=6;case 6:return client?(internalPayload.messageType=MessageType.NOTIFICATION_CLICKED,internalPayload.isFirebaseMessaging=!0,[2,client.postMessage(internalPayload)]):[2]}})})},SwController}();function wrapInternalPayload(internalPayload){var _a,wrappedInternalPayload=Object(tslib_es6.__assign)({},internalPayload.notification);return wrappedInternalPayload.data=((_a={}).FCM_MSG=internalPayload,_a),wrappedInternalPayload}function getWindowClient(url){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var clientList,clientList_1,clientList_1_1,client,clientUrl,e_1,_a;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return[4,getClientList()];case 1:clientList=_b.sent();try{for(clientList_1=Object(tslib_es6.__values)(clientList),clientList_1_1=clientList_1.next();!clientList_1_1.done;clientList_1_1=clientList_1.next())if(client=clientList_1_1.value,clientUrl=new URL(client.url,self.location.href),url.host===clientUrl.host)return[2,client]}catch(e_1_1){e_1={error:e_1_1}}finally{try{clientList_1_1&&!clientList_1_1.done&&(_a=clientList_1.return)&&_a.call(clientList_1)}finally{if(e_1)throw e_1.error}}return[2,null]}})})}function sendMessagePayloadInternalToWindows(clientList,internalPayload){var e_2,_a;internalPayload.isFirebaseMessaging=!0,internalPayload.messageType=MessageType.PUSH_RECEIVED;try{for(var clientList_2=Object(tslib_es6.__values)(clientList),clientList_2_1=clientList_2.next();!clientList_2_1.done;clientList_2_1=clientList_2.next())clientList_2_1.value.postMessage(internalPayload)}catch(e_2_1){e_2={error:e_2_1}}finally{try{clientList_2_1&&!clientList_2_1.done&&(_a=clientList_2.return)&&_a.call(clientList_2)}finally{if(e_2)throw e_2.error}}}function getClientList(){return self.clients.matchAll({type:\"window\",includeUncontrolled:!0})}function showNotification(notificationPayloadInternal){var _a,actions=notificationPayloadInternal.actions,maxActions=Notification.maxActions;return actions&&maxActions&&actions.length>maxActions&&console.warn(\"This browser only supports \"+maxActions+\" actions. The remaining actions will not be displayed.\"),self.registration.showNotification(null!==(_a=notificationPayloadInternal.title)&&void 0!==_a?_a:\"\",notificationPayloadInternal)}var index_esm_WindowController=function(){function WindowController(firebaseDependencies){var _this=this;this.firebaseDependencies=firebaseDependencies,this.vapidKey=null,this.onMessageCallback=null,navigator.serviceWorker.addEventListener(\"message\",function(e){return _this.messageEventListener(e)})}return Object.defineProperty(WindowController.prototype,\"app\",{get:function(){return this.firebaseDependencies.app},enumerable:!1,configurable:!0}),WindowController.prototype.messageEventListener=function(event){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var internalPayload,dataPayload;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return(internalPayload=event.data).isFirebaseMessaging?(this.onMessageCallback&&internalPayload.messageType===MessageType.PUSH_RECEIVED&&(\"function\"==typeof this.onMessageCallback?this.onMessageCallback(function(internalPayload){return delete internalPayload.messageType,delete internalPayload.isFirebaseMessaging,internalPayload}(Object.assign({},internalPayload))):this.onMessageCallback.next(Object.assign({},internalPayload))),isConsoleMessage(dataPayload=internalPayload.data)&&\"1\"===dataPayload[\"google.c.a.e\"]?[4,this.logEvent(internalPayload.messageType,dataPayload)]:[3,2]):[2];case 1:_a.sent(),_a.label=2;case 2:return[2]}})})},WindowController.prototype.getVapidKey=function(){return this.vapidKey},WindowController.prototype.getSwReg=function(){return this.swRegistration},WindowController.prototype.getToken=function(options){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return\"default\"!==Notification.permission?[3,2]:[4,Notification.requestPermission()];case 1:_a.sent(),_a.label=2;case 2:if(\"granted\"!==Notification.permission)throw index_esm_ERROR_FACTORY.create(\"permission-blocked\");return[4,this.updateVapidKey(null==options?void 0:options.vapidKey)];case 3:return _a.sent(),[4,this.updateSwReg(null==options?void 0:options.serviceWorkerRegistration)];case 4:return _a.sent(),[2,index_esm_getToken(this.firebaseDependencies,this.swRegistration,this.vapidKey)]}})})},WindowController.prototype.updateVapidKey=function(vapidKey){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){return Object(tslib_es6.__generator)(this,function(_a){return vapidKey?this.vapidKey=vapidKey:this.vapidKey||(this.vapidKey=DEFAULT_VAPID_KEY),[2]})})},WindowController.prototype.updateSwReg=function(swRegistration){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return swRegistration||this.swRegistration?[3,2]:[4,this.registerDefaultSw()];case 1:_a.sent(),_a.label=2;case 2:if(!swRegistration&&this.swRegistration)return[2];if(!(swRegistration instanceof ServiceWorkerRegistration))throw index_esm_ERROR_FACTORY.create(\"invalid-sw-registration\");return this.swRegistration=swRegistration,[2]}})})},WindowController.prototype.registerDefaultSw=function(){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var _a,e_1;return Object(tslib_es6.__generator)(this,function(_b){switch(_b.label){case 0:return _b.trys.push([0,2,,3]),_a=this,[4,navigator.serviceWorker.register(\"/firebase-messaging-sw.js\",{scope:\"/firebase-cloud-messaging-push-scope\"})];case 1:return _a.swRegistration=_b.sent(),this.swRegistration.update().catch(function(){}),[3,3];case 2:throw e_1=_b.sent(),index_esm_ERROR_FACTORY.create(\"failed-service-worker-registration\",{browserErrorMessage:e_1.message});case 3:return[2]}})})},WindowController.prototype.deleteToken=function(){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return this.swRegistration?[3,2]:[4,this.registerDefaultSw()];case 1:_a.sent(),_a.label=2;case 2:return[2,deleteToken(this.firebaseDependencies,this.swRegistration)]}})})},WindowController.prototype.requestPermission=function(){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var permissionResult;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return\"granted\"===Notification.permission?[2]:[4,Notification.requestPermission()];case 1:if(\"granted\"===(permissionResult=_a.sent()))return[2];throw index_esm_ERROR_FACTORY.create(\"denied\"===permissionResult?\"permission-blocked\":\"permission-default\")}})})},WindowController.prototype.usePublicVapidKey=function(vapidKey){if(null!==this.vapidKey)throw index_esm_ERROR_FACTORY.create(\"use-vapid-key-after-get-token\");if(\"string\"!=typeof vapidKey||0===vapidKey.length)throw index_esm_ERROR_FACTORY.create(\"invalid-vapid-key\");this.vapidKey=vapidKey},WindowController.prototype.useServiceWorker=function(swRegistration){if(!(swRegistration instanceof ServiceWorkerRegistration))throw index_esm_ERROR_FACTORY.create(\"invalid-sw-registration\");if(this.swRegistration)throw index_esm_ERROR_FACTORY.create(\"use-sw-after-get-token\");this.swRegistration=swRegistration},WindowController.prototype.onMessage=function(nextOrObserver){var _this=this;return this.onMessageCallback=nextOrObserver,function(){_this.onMessageCallback=null}},WindowController.prototype.setBackgroundMessageHandler=function(){throw index_esm_ERROR_FACTORY.create(\"only-available-in-sw\")},WindowController.prototype.onBackgroundMessage=function(){throw index_esm_ERROR_FACTORY.create(\"only-available-in-sw\")},WindowController.prototype.onTokenRefresh=function(){return function(){}},WindowController.prototype.logEvent=function(messageType,data){return Object(tslib_es6.__awaiter)(this,void 0,void 0,function(){var eventType;return Object(tslib_es6.__generator)(this,function(_a){switch(_a.label){case 0:return eventType=function(messageType){switch(messageType){case MessageType.NOTIFICATION_CLICKED:return\"notification_open\";case MessageType.PUSH_RECEIVED:return\"notification_foreground\";default:throw new Error}}(messageType),[4,this.firebaseDependencies.analyticsProvider.get()];case 1:return _a.sent().logEvent(eventType,{message_id:data[\"google.c.a.c_id\"],message_name:data[\"google.c.a.c_l\"],message_time:data[\"google.c.a.ts\"],message_device_time:Math.floor(Date.now()/1e3)}),[2]}})})},WindowController}();function index_esm_getMissingValueError(valueName){return index_esm_ERROR_FACTORY.create(\"missing-app-config-values\",{valueName:valueName})}var NAMESPACE_EXPORTS={isSupported:isSupported};function isSupported(){return self&&\"ServiceWorkerGlobalScope\"in self?\"indexedDB\"in self&&null!==indexedDB&&\"PushManager\"in self&&\"Notification\"in self&&ServiceWorkerRegistration.prototype.hasOwnProperty(\"showNotification\")&&PushSubscription.prototype.hasOwnProperty(\"getKey\"):\"indexedDB\"in window&&null!==indexedDB&&navigator.cookieEnabled&&\"serviceWorker\"in navigator&&\"PushManager\"in window&&\"Notification\"in window&&\"fetch\"in window&&ServiceWorkerRegistration.prototype.hasOwnProperty(\"showNotification\")&&PushSubscription.prototype.hasOwnProperty(\"getKey\")}index_cjs_default.a.INTERNAL.registerComponent(new dist_index_cjs.Component(\"messaging\",function(container){var app=container.getProvider(\"app\").getImmediate(),firebaseDependencies={app:app,appConfig:function(app){var e_1,_a;if(!app||!app.options)throw index_esm_getMissingValueError(\"App Configuration Object\");if(!app.name)throw index_esm_getMissingValueError(\"App Name\");var options=app.options;try{for(var configKeys_1=Object(tslib_es6.__values)([\"projectId\",\"apiKey\",\"appId\",\"messagingSenderId\"]),configKeys_1_1=configKeys_1.next();!configKeys_1_1.done;configKeys_1_1=configKeys_1.next()){var keyName=configKeys_1_1.value;if(!options[keyName])throw index_esm_getMissingValueError(keyName)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{configKeys_1_1&&!configKeys_1_1.done&&(_a=configKeys_1.return)&&_a.call(configKeys_1)}finally{if(e_1)throw e_1.error}}return{appName:app.name,projectId:options.projectId,apiKey:options.apiKey,appId:options.appId,senderId:options.messagingSenderId}}(app),installations:container.getProvider(\"installations\").getImmediate(),analyticsProvider:container.getProvider(\"analytics-internal\")};if(!isSupported())throw index_esm_ERROR_FACTORY.create(\"unsupported-browser\");return self&&\"ServiceWorkerGlobalScope\"in self?new index_esm_SwController(firebaseDependencies):new index_esm_WindowController(firebaseDependencies)},\"PUBLIC\").setServiceProps(NAMESPACE_EXPORTS))},nbvr:function(module,exports,__webpack_require__){!function(exports){\"use strict\";function toArray(arr){return Array.prototype.slice.call(arr)}function promisifyRequest(request){return new Promise(function(resolve,reject){request.onsuccess=function(){resolve(request.result)},request.onerror=function(){reject(request.error)}})}function promisifyRequestCall(obj,method,args){var request,p=new Promise(function(resolve,reject){promisifyRequest(request=obj[method].apply(obj,args)).then(resolve,reject)});return p.request=request,p}function promisifyCursorRequestCall(obj,method,args){var p=promisifyRequestCall(obj,method,args);return p.then(function(value){if(value)return new Cursor(value,p.request)})}function proxyProperties(ProxyClass,targetProp,properties){properties.forEach(function(prop){Object.defineProperty(ProxyClass.prototype,prop,{get:function(){return this[targetProp][prop]},set:function(val){this[targetProp][prop]=val}})})}function proxyRequestMethods(ProxyClass,targetProp,Constructor,properties){properties.forEach(function(prop){prop in Constructor.prototype&&(ProxyClass.prototype[prop]=function(){return promisifyRequestCall(this[targetProp],prop,arguments)})})}function proxyMethods(ProxyClass,targetProp,Constructor,properties){properties.forEach(function(prop){prop in Constructor.prototype&&(ProxyClass.prototype[prop]=function(){return this[targetProp][prop].apply(this[targetProp],arguments)})})}function proxyCursorRequestMethods(ProxyClass,targetProp,Constructor,properties){properties.forEach(function(prop){prop in Constructor.prototype&&(ProxyClass.prototype[prop]=function(){return promisifyCursorRequestCall(this[targetProp],prop,arguments)})})}function Index(index){this._index=index}function Cursor(cursor,request){this._cursor=cursor,this._request=request}function ObjectStore(store){this._store=store}function Transaction(idbTransaction){this._tx=idbTransaction,this.complete=new Promise(function(resolve,reject){idbTransaction.oncomplete=function(){resolve()},idbTransaction.onerror=function(){reject(idbTransaction.error)},idbTransaction.onabort=function(){reject(idbTransaction.error)}})}function UpgradeDB(db,oldVersion,transaction){this._db=db,this.oldVersion=oldVersion,this.transaction=new Transaction(transaction)}function DB(db){this._db=db}proxyProperties(Index,\"_index\",[\"name\",\"keyPath\",\"multiEntry\",\"unique\"]),proxyRequestMethods(Index,\"_index\",IDBIndex,[\"get\",\"getKey\",\"getAll\",\"getAllKeys\",\"count\"]),proxyCursorRequestMethods(Index,\"_index\",IDBIndex,[\"openCursor\",\"openKeyCursor\"]),proxyProperties(Cursor,\"_cursor\",[\"direction\",\"key\",\"primaryKey\",\"value\"]),proxyRequestMethods(Cursor,\"_cursor\",IDBCursor,[\"update\",\"delete\"]),[\"advance\",\"continue\",\"continuePrimaryKey\"].forEach(function(methodName){methodName in IDBCursor.prototype&&(Cursor.prototype[methodName]=function(){var cursor=this,args=arguments;return Promise.resolve().then(function(){return cursor._cursor[methodName].apply(cursor._cursor,args),promisifyRequest(cursor._request).then(function(value){if(value)return new Cursor(value,cursor._request)})})})}),ObjectStore.prototype.createIndex=function(){return new Index(this._store.createIndex.apply(this._store,arguments))},ObjectStore.prototype.index=function(){return new Index(this._store.index.apply(this._store,arguments))},proxyProperties(ObjectStore,\"_store\",[\"name\",\"keyPath\",\"indexNames\",\"autoIncrement\"]),proxyRequestMethods(ObjectStore,\"_store\",IDBObjectStore,[\"put\",\"add\",\"delete\",\"clear\",\"get\",\"getAll\",\"getKey\",\"getAllKeys\",\"count\"]),proxyCursorRequestMethods(ObjectStore,\"_store\",IDBObjectStore,[\"openCursor\",\"openKeyCursor\"]),proxyMethods(ObjectStore,\"_store\",IDBObjectStore,[\"deleteIndex\"]),Transaction.prototype.objectStore=function(){return new ObjectStore(this._tx.objectStore.apply(this._tx,arguments))},proxyProperties(Transaction,\"_tx\",[\"objectStoreNames\",\"mode\"]),proxyMethods(Transaction,\"_tx\",IDBTransaction,[\"abort\"]),UpgradeDB.prototype.createObjectStore=function(){return new ObjectStore(this._db.createObjectStore.apply(this._db,arguments))},proxyProperties(UpgradeDB,\"_db\",[\"name\",\"version\",\"objectStoreNames\"]),proxyMethods(UpgradeDB,\"_db\",IDBDatabase,[\"deleteObjectStore\",\"close\"]),DB.prototype.transaction=function(){return new Transaction(this._db.transaction.apply(this._db,arguments))},proxyProperties(DB,\"_db\",[\"name\",\"version\",\"objectStoreNames\"]),proxyMethods(DB,\"_db\",IDBDatabase,[\"close\"]),[\"openCursor\",\"openKeyCursor\"].forEach(function(funcName){[ObjectStore,Index].forEach(function(Constructor){funcName in Constructor.prototype&&(Constructor.prototype[funcName.replace(\"open\",\"iterate\")]=function(){var args=toArray(arguments),callback=args[args.length-1],nativeObject=this._store||this._index,request=nativeObject[funcName].apply(nativeObject,args.slice(0,-1));request.onsuccess=function(){callback(request.result)}})})}),[Index,ObjectStore].forEach(function(Constructor){Constructor.prototype.getAll||(Constructor.prototype.getAll=function(query,count){var instance=this,items=[];return new Promise(function(resolve){instance.iterateCursor(query,function(cursor){cursor?(items.push(cursor.value),void 0===count||items.length!=count?cursor.continue():resolve(items)):resolve(items)})})})}),exports.openDb=function(name,version,upgradeCallback){var p=promisifyRequestCall(indexedDB,\"open\",[name,version]),request=p.request;return request&&(request.onupgradeneeded=function(event){upgradeCallback&&upgradeCallback(new UpgradeDB(request.result,event.oldVersion,request.transaction))}),p.then(function(db){return new DB(db)})},exports.deleteDb=function(name){return promisifyRequestCall(indexedDB,\"deleteDatabase\",[name])},Object.defineProperty(exports,\"__esModule\",{value:!0})}(exports)}}]);","name":"20-es2015.62f16fb253975b3a35a9.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[20],{\n\n/***/ \"dB9c\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/app/dist/index.cjs.js\nvar index_cjs = __webpack_require__(\"wj3C\");\nvar index_cjs_default = /*#__PURE__*/__webpack_require__.n(index_cjs);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/component/dist/index.cjs.js\nvar dist_index_cjs = __webpack_require__(\"S+S0\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/firestore/node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"os0x\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/util/dist/index.cjs.js\nvar util_dist_index_cjs = __webpack_require__(\"zVF4\");\n\n// EXTERNAL MODULE: ./node_modules/idb/build/idb.js\nvar idb = __webpack_require__(\"nbvr\");\n\n// CONCATENATED MODULE: ./node_modules/@firebase/installations/dist/index.esm.js\n\n\n\n\n\n\nvar index_esm_name = \"@firebase/installations\";\nvar version = \"0.4.17\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_a;\r\nvar ERROR_DESCRIPTION_MAP = (index_esm_a = {},\r\n    index_esm_a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    index_esm_a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    index_esm_a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    index_esm_a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    index_esm_a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    index_esm_a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    index_esm_a);\r\nvar ERROR_FACTORY = new util_dist_index_cjs[\"ErrorFactory\"](SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof util_dist_index_cjs[\"FirebaseError\"] &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var result;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallationRequest(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, Object(tslib_es6[\"__spread\"])(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    var key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    var e_1, _a;\r\n    var callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    try {\r\n        for (var callbacks_1 = Object(tslib_es6[\"__values\"])(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n            var callback = callbacks_1_1.value;\r\n            callback(fid);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    var channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key: key, fid: fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nvar broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = function (e) {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = Object(idb[\"openDb\"])(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var key, db, tx, objectStore, oldValue;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, objectStore.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    return [4 /*yield*/, objectStore.put(value, key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 4:\r\n                    _a.sent();\r\n                    if (!oldValue || oldValue.fid !== value.fid) {\r\n                        fidChanged(appConfig, value.fid);\r\n                    }\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n                        fidChanged(appConfig, newValue.fid);\r\n                    }\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry;\r\n        var _a;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthTokenRequest(_a, installationEntry) {\r\n    var appConfig = _a.appConfig, platformLoggerProvider = _a.platformLoggerProvider;\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n                    }\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object(tslib_es6[\"__assign\"])(Object(tslib_es6[\"__assign\"])({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = Object(tslib_es6[\"__assign\"])(Object(tslib_es6[\"__assign\"])({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(dependencies.appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = Object(tslib_es6[\"__assign\"])(Object(tslib_es6[\"__assign\"])({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object(tslib_es6[\"__assign\"])(Object(tslib_es6[\"__assign\"])({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(dependencies) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(dependencies).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallationRequest(appConfig, installationEntry) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(dependencies) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = dependencies.appConfig;\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n */\r\nfunction onIdChange(_a, callback) {\r\n    var appConfig = _a.appConfig;\r\n    addCallback(appConfig, callback);\r\n    return function () {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = Object(tslib_es6[\"__values\"])(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    instance.INTERNAL.registerComponent(new dist_index_cjs[\"Component\"](installationsName, function (container) {\r\n        var app = container.getProvider('app').getImmediate();\r\n        // Throws if app isn't configured properly.\r\n        var appConfig = extractAppConfig(app);\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        var dependencies = {\r\n            appConfig: appConfig,\r\n            platformLoggerProvider: platformLoggerProvider\r\n        };\r\n        var installations = {\r\n            app: app,\r\n            getId: function () { return getId(dependencies); },\r\n            getToken: function (forceRefresh) {\r\n                return getToken(dependencies, forceRefresh);\r\n            },\r\n            delete: function () { return deleteInstallation(dependencies); },\r\n            onIdChange: function (callback) {\r\n                return onIdChange(dependencies, callback);\r\n            }\r\n        };\r\n        return installations;\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(index_esm_name, version);\r\n}\r\nregisterInstallations(index_cjs_default.a);\n\n\n//# sourceMappingURL=index.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/@firebase/messaging/dist/index.esm.js\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar dist_index_esm_a;\r\nvar ERROR_MAP = (dist_index_esm_a = {},\r\n    dist_index_esm_a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    dist_index_esm_a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    dist_index_esm_a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    dist_index_esm_a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The notification permission was not granted and dismissed instead.',\r\n    dist_index_esm_a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The notification permission was not granted and blocked instead.',\r\n    dist_index_esm_a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's required to use the firebase SDK.\",\r\n    dist_index_esm_a[\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    dist_index_esm_a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\r\n    dist_index_esm_a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    dist_index_esm_a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occurred while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    dist_index_esm_a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occurred while updating the user from FCM: {$errorInfo}',\r\n    dist_index_esm_a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    dist_index_esm_a[\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    dist_index_esm_a[\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */] = 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    dist_index_esm_a[\"invalid-bg-handler\" /* INVALID_BG_HANDLER */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    dist_index_esm_a[\"invalid-vapid-key\" /* INVALID_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    dist_index_esm_a[\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    dist_index_esm_a);\r\nvar index_esm_ERROR_FACTORY = new util_dist_index_cjs[\"ErrorFactory\"]('messaging', 'Messaging', ERROR_MAP);\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\r\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\n/** Key of FCM Payload in Notification's data field. */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\nvar CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\r\nvar CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\r\n/** Set to '1' if Analytics is enabled for the campaign */\r\nvar CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\r\nvar TAG = 'FirebaseMessaging: ';\r\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\nvar MessageType = /*@__PURE__*/ (function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n    return MessageType;\r\n})({});\r\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    var uint8Array = new Uint8Array(array);\r\n    var base64String = btoa(String.fromCharCode.apply(String, Object(tslib_es6[\"__spread\"])(uint8Array)));\r\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\r\nvar OLD_DB_VERSION = 5;\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction migrateOldDatabase(senderId) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var databases, dbNames, tokenDetails, db;\r\n        var _this = this;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!('databases' in indexedDB))\r\n                        return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, indexedDB.databases()];\r\n                case 1:\r\n                    databases = _a.sent();\r\n                    dbNames = databases.map(function (db) { return db.name; });\r\n                    if (!dbNames.includes(OLD_DB_NAME)) {\r\n                        // old DB didn't exist, no need to open.\r\n                        return [2 /*return*/, null];\r\n                    }\r\n                    _a.label = 2;\r\n                case 2:\r\n                    tokenDetails = null;\r\n                    return [4 /*yield*/, Object(idb[\"openDb\"])(OLD_DB_NAME, OLD_DB_VERSION, function (db) {\r\n                            return Object(tslib_es6[\"__awaiter\"])(_this, void 0, void 0, function () {\r\n                                var objectStore, value, oldDetails, oldDetails, oldDetails;\r\n                                var _a;\r\n                                return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n                                    switch (_b.label) {\r\n                                        case 0:\r\n                                            if (db.oldVersion < 2) {\r\n                                                // Database too old, skip migration.\r\n                                                return [2 /*return*/];\r\n                                            }\r\n                                            if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n                                                // Database did not exist. Nothing to do.\r\n                                                return [2 /*return*/];\r\n                                            }\r\n                                            objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n                                            return [4 /*yield*/, objectStore.index('fcmSenderId').get(senderId)];\r\n                                        case 1:\r\n                                            value = _b.sent();\r\n                                            return [4 /*yield*/, objectStore.clear()];\r\n                                        case 2:\r\n                                            _b.sent();\r\n                                            if (!value) {\r\n                                                // No entry in the database, nothing to migrate.\r\n                                                return [2 /*return*/];\r\n                                            }\r\n                                            if (db.oldVersion === 2) {\r\n                                                oldDetails = value;\r\n                                                if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                                                    return [2 /*return*/];\r\n                                                }\r\n                                                tokenDetails = {\r\n                                                    token: oldDetails.fcmToken,\r\n                                                    createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                                                    subscriptionOptions: {\r\n                                                        auth: oldDetails.auth,\r\n                                                        p256dh: oldDetails.p256dh,\r\n                                                        endpoint: oldDetails.endpoint,\r\n                                                        swScope: oldDetails.swScope,\r\n                                                        vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                                                            ? oldDetails.vapidKey\r\n                                                            : arrayToBase64(oldDetails.vapidKey)\r\n                                                    }\r\n                                                };\r\n                                            }\r\n                                            else if (db.oldVersion === 3) {\r\n                                                oldDetails = value;\r\n                                                tokenDetails = {\r\n                                                    token: oldDetails.fcmToken,\r\n                                                    createTime: oldDetails.createTime,\r\n                                                    subscriptionOptions: {\r\n                                                        auth: arrayToBase64(oldDetails.auth),\r\n                                                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                                                        endpoint: oldDetails.endpoint,\r\n                                                        swScope: oldDetails.swScope,\r\n                                                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                                                    }\r\n                                                };\r\n                                            }\r\n                                            else if (db.oldVersion === 4) {\r\n                                                oldDetails = value;\r\n                                                tokenDetails = {\r\n                                                    token: oldDetails.fcmToken,\r\n                                                    createTime: oldDetails.createTime,\r\n                                                    subscriptionOptions: {\r\n                                                        auth: arrayToBase64(oldDetails.auth),\r\n                                                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                                                        endpoint: oldDetails.endpoint,\r\n                                                        swScope: oldDetails.swScope,\r\n                                                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                                                    }\r\n                                                };\r\n                                            }\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        })];\r\n                case 3:\r\n                    db = _a.sent();\r\n                    db.close();\r\n                    // Delete all old databases.\r\n                    return [4 /*yield*/, Object(idb[\"deleteDb\"])(OLD_DB_NAME)];\r\n                case 4:\r\n                    // Delete all old databases.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, Object(idb[\"deleteDb\"])('fcm_vapid_details_db')];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, Object(idb[\"deleteDb\"])('undefined')];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [2 /*return*/, checkTokenDetails(tokenDetails) ? tokenDetails : null];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    var subscriptionOptions = tokenDetails.subscriptionOptions;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nvar index_esm_DATABASE_NAME = 'firebase-messaging-database';\r\nvar index_esm_DATABASE_VERSION = 1;\r\nvar index_esm_OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nvar index_esm_dbPromise = null;\r\nfunction index_esm_getDbPromise() {\r\n    if (!index_esm_dbPromise) {\r\n        index_esm_dbPromise = Object(idb[\"openDb\"])(index_esm_DATABASE_NAME, index_esm_DATABASE_VERSION, function (upgradeDb) {\r\n            // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\r\n            // because if there are multiple versions between the old version and the current version, we\r\n            // want ALL the migrations that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDb.oldVersion) {\r\n                case 0:\r\n                    upgradeDb.createObjectStore(index_esm_OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return index_esm_dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nfunction dbGet(firebaseDependencies) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var key, db, tokenDetails, oldTokenDetails;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = index_esm_getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, index_esm_getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    return [4 /*yield*/, db\r\n                            .transaction(index_esm_OBJECT_STORE_NAME)\r\n                            .objectStore(index_esm_OBJECT_STORE_NAME)\r\n                            .get(key)];\r\n                case 2:\r\n                    tokenDetails = _a.sent();\r\n                    if (!tokenDetails)\r\n                        return [3 /*break*/, 3];\r\n                    return [2 /*return*/, tokenDetails];\r\n                case 3: return [4 /*yield*/, migrateOldDatabase(firebaseDependencies.appConfig.senderId)];\r\n                case 4:\r\n                    oldTokenDetails = _a.sent();\r\n                    if (!oldTokenDetails)\r\n                        return [3 /*break*/, 6];\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, oldTokenDetails)];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [2 /*return*/, oldTokenDetails];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction dbSet(firebaseDependencies, tokenDetails) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = index_esm_getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, index_esm_getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(index_esm_OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(index_esm_OBJECT_STORE_NAME).put(tokenDetails, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, tokenDetails];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction dbRemove(firebaseDependencies) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = index_esm_getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, index_esm_getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(index_esm_OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(index_esm_OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction index_esm_getKey(_a) {\r\n    var appConfig = _a.appConfig;\r\n    return appConfig.appId;\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var headers, body, subscribeOptions, responseData, response, err_1, message;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, index_esm_getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    body = getBody(subscriptionOptions);\r\n                    subscribeOptions = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_1 = _a.sent();\r\n                    throw index_esm_ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                        errorInfo: err_1\r\n                    });\r\n                case 6:\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw index_esm_ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    if (!responseData.token) {\r\n                        throw index_esm_ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                    }\r\n                    return [2 /*return*/, responseData.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var headers, body, updateOptions, responseData, response, err_2, message;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, index_esm_getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    body = getBody(tokenDetails.subscriptionOptions);\r\n                    updateOptions = {\r\n                        method: 'PATCH',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + tokenDetails.token, updateOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_2 = _a.sent();\r\n                    throw index_esm_ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                        errorInfo: err_2\r\n                    });\r\n                case 6:\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw index_esm_ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    if (!responseData.token) {\r\n                        throw index_esm_ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                    }\r\n                    return [2 /*return*/, responseData.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requestDeleteToken(firebaseDependencies, token) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var headers, unsubscribeOptions, response, responseData, message, err_3;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, index_esm_getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    unsubscribeOptions = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + token, unsubscribeOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw index_esm_ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_3 = _a.sent();\r\n                    throw index_esm_ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                        errorInfo: err_3\r\n                    });\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return ENDPOINT + \"/projects/\" + projectId + \"/registrations\";\r\n}\r\nfunction index_esm_getHeaders(_a) {\r\n    var appConfig = _a.appConfig, installations = _a.installations;\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getToken()];\r\n                case 1:\r\n                    authToken = _b.sent();\r\n                    return [2 /*return*/, new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            Accept: 'application/json',\r\n                            'x-goog-api-key': appConfig.apiKey,\r\n                            'x-goog-firebase-installations-auth': \"FIS \" + authToken\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getBody(_a) {\r\n    var p256dh = _a.p256dh, auth = _a.auth, endpoint = _a.endpoint, vapidKey = _a.vapidKey;\r\n    var body = {\r\n        web: {\r\n            endpoint: endpoint,\r\n            auth: auth,\r\n            p256dh: p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** UpdateRegistration will be called once every week. */\r\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nfunction index_esm_getToken(firebaseDependencies, swRegistration, vapidKey) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var pushSubscription, tokenDetails, subscriptionOptions, e_1;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (Notification.permission !== 'granted') {\r\n                        throw index_esm_ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                    }\r\n                    return [4 /*yield*/, getPushSubscription(swRegistration, vapidKey)];\r\n                case 1:\r\n                    pushSubscription = _a.sent();\r\n                    return [4 /*yield*/, dbGet(firebaseDependencies)];\r\n                case 2:\r\n                    tokenDetails = _a.sent();\r\n                    subscriptionOptions = {\r\n                        vapidKey: vapidKey,\r\n                        swScope: swRegistration.scope,\r\n                        endpoint: pushSubscription.endpoint,\r\n                        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n                        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n                    };\r\n                    if (!!tokenDetails)\r\n                        return [3 /*break*/, 3];\r\n                    // No token, get a new one.\r\n                    return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\r\n                case 3:\r\n                    if (!!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions))\r\n                        return [3 /*break*/, 8];\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, 6, , 7]);\r\n                    return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 6:\r\n                    e_1 = _a.sent();\r\n                    // Suppress errors because of #2364\r\n                    console.warn(e_1);\r\n                    return [3 /*break*/, 7];\r\n                case 7: return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\r\n                case 8:\r\n                    if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n                        // Weekly token refresh\r\n                        return [2 /*return*/, updateToken({\r\n                                token: tokenDetails.token,\r\n                                createTime: Date.now(),\r\n                                subscriptionOptions: subscriptionOptions\r\n                            }, firebaseDependencies, swRegistration)];\r\n                    }\r\n                    else {\r\n                        // Valid token, nothing to do.\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                    }\r\n                case 9: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\r\nfunction deleteToken(firebaseDependencies, swRegistration) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var tokenDetails, pushSubscription;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, dbGet(firebaseDependencies)];\r\n                case 1:\r\n                    tokenDetails = _a.sent();\r\n                    if (!tokenDetails)\r\n                        return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, dbRemove(firebaseDependencies)];\r\n                case 3:\r\n                    _a.sent();\r\n                    _a.label = 4;\r\n                case 4: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                case 5:\r\n                    pushSubscription = _a.sent();\r\n                    if (pushSubscription) {\r\n                        return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                    }\r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction updateToken(tokenDetails, firebaseDependencies, swRegistration) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var updatedToken, updatedTokenDetails, e_2;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 5]);\r\n                    return [4 /*yield*/, requestUpdateToken(firebaseDependencies, tokenDetails)];\r\n                case 1:\r\n                    updatedToken = _a.sent();\r\n                    updatedTokenDetails = Object(tslib_es6[\"__assign\"])(Object(tslib_es6[\"__assign\"])({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, updatedTokenDetails)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, updatedToken];\r\n                case 3:\r\n                    e_2 = _a.sent();\r\n                    return [4 /*yield*/, deleteToken(firebaseDependencies, swRegistration)];\r\n                case 4:\r\n                    _a.sent();\r\n                    throw e_2;\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var token, tokenDetails;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requestGetToken(firebaseDependencies, subscriptionOptions)];\r\n                case 1:\r\n                    token = _a.sent();\r\n                    tokenDetails = {\r\n                        token: token,\r\n                        createTime: Date.now(),\r\n                        subscriptionOptions: subscriptionOptions\r\n                    };\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, tokenDetails)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, tokenDetails.token];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nfunction getPushSubscription(swRegistration, vapidKey) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var subscription;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                case 1:\r\n                    subscription = _a.sent();\r\n                    if (subscription) {\r\n                        return [2 /*return*/, subscription];\r\n                    }\r\n                    return [2 /*return*/, swRegistration.pushManager.subscribe({\r\n                            userVisibleOnly: true,\r\n                            // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n                            // submitted to pushManager#subscribe must be of type Uint8Array.\r\n                            applicationServerKey: base64ToArray(vapidKey)\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    var isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\r\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction externalizePayload(internalPayload) {\r\n    var payload = {\r\n        from: internalPayload.from,\r\n        // eslint-disable-next-line camelcase\r\n        collapseKey: internalPayload.collapse_key\r\n    };\r\n    propagateNotificationPayload(payload, internalPayload);\r\n    propagateDataPayload(payload, internalPayload);\r\n    propagateFcmOptions(payload, internalPayload);\r\n    return payload;\r\n}\r\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.notification) {\r\n        return;\r\n    }\r\n    payload.notification = {};\r\n    var title = messagePayloadInternal.notification.title;\r\n    if (!!title) {\r\n        payload.notification.title = title;\r\n    }\r\n    var body = messagePayloadInternal.notification.body;\r\n    if (!!body) {\r\n        payload.notification.body = body;\r\n    }\r\n    var image = messagePayloadInternal.notification.image;\r\n    if (!!image) {\r\n        payload.notification.image = image;\r\n    }\r\n}\r\nfunction propagateDataPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.data) {\r\n        return;\r\n    }\r\n    payload.data = messagePayloadInternal.data;\r\n}\r\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.fcmOptions) {\r\n        return;\r\n    }\r\n    payload.fcmOptions = {};\r\n    var link = messagePayloadInternal.fcmOptions.link;\r\n    if (!!link) {\r\n        payload.fcmOptions.link = link;\r\n    }\r\n    // eslint-disable-next-line camelcase\r\n    var analyticsLabel = messagePayloadInternal.fcmOptions.analytics_label;\r\n    if (!!analyticsLabel) {\r\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\r\n    }\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction index_esm_sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_SwController = /** @class */ /*@__PURE__*/ (function () {\r\n    function SwController(firebaseDependencies) {\r\n        var _this = this;\r\n        this.firebaseDependencies = firebaseDependencies;\r\n        // A boolean flag to determine wether an app is using onBackgroundMessage or\r\n        // setBackgroundMessageHandler. onBackgroundMessage will receive a MessagePayload regardless of if\r\n        // a notification is displayed. Whereas, setBackgroundMessageHandler will swallow the\r\n        // MessagePayload if a NotificationPayload is included.\r\n        this.isOnBackgroundMessageUsed = null;\r\n        this.vapidKey = null;\r\n        this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            e.waitUntil(_this.onPush(e));\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            e.waitUntil(_this.onSubChange(e));\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            e.waitUntil(_this.onNotificationClick(e));\r\n        });\r\n    }\r\n    Object.defineProperty(SwController.prototype, \"app\", {\r\n        get: function () {\r\n            return this.firebaseDependencies.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @deprecated. Use onBackgroundMessage(nextOrObserver: NextFn<object> | Observer<object>):\r\n     * Unsubscribe instead.\r\n     *\r\n     * Calling setBackgroundMessageHandler will opt in to some specific behaviors.\r\n     *\r\n     * 1.) If a notification doesn't need to be shown due to a window already being visible, then push\r\n     * messages will be sent to the page. 2.) If a notification needs to be shown, and the message\r\n     * contains no notification data this method will be called and the promise it returns will be\r\n     * passed to event.waitUntil. If you do not set this callback then all push messages will let and\r\n     * the developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received and a notification\r\n     * must be shown. The callback will be given the data from the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        this.isOnBackgroundMessageUsed = false;\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw index_esm_ERROR_FACTORY.create(\"invalid-bg-handler\" /* INVALID_BG_HANDLER */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    SwController.prototype.onBackgroundMessage = function (nextOrObserver) {\r\n        var _this = this;\r\n        this.isOnBackgroundMessageUsed = true;\r\n        this.bgMessageHandler = nextOrObserver;\r\n        return function () {\r\n            _this.bgMessageHandler = null;\r\n        };\r\n    };\r\n    // TODO: Remove getToken from SW Controller. Calling this from an old SW can cause all kinds of\r\n    // trouble.\r\n    SwController.prototype.getToken = function () {\r\n        var _a, _b;\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var tokenDetails;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.vapidKey)\r\n                            return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, dbGet(this.firebaseDependencies)];\r\n                    case 1:\r\n                        tokenDetails = _c.sent();\r\n                        this.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/, index_esm_getToken(this.firebaseDependencies, self.registration, this.vapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // TODO: Remove deleteToken from SW Controller. Calling this from an old SW can cause all kinds of\r\n    // trouble.\r\n    SwController.prototype.deleteToken = function () {\r\n        return deleteToken(this.firebaseDependencies, self.registration);\r\n    };\r\n    SwController.prototype.requestPermission = function () {\r\n        throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    // TODO: Remove this together with getToken from SW Controller.\r\n    SwController.prototype.usePublicVapidKey = function (vapidKey) {\r\n        if (this.vapidKey !== null) {\r\n            throw index_esm_ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\r\n        }\r\n        if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\r\n            throw index_esm_ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\r\n        }\r\n        this.vapidKey = vapidKey;\r\n    };\r\n    SwController.prototype.useServiceWorker = function () {\r\n        throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    SwController.prototype.onMessage = function () {\r\n        throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    SwController.prototype.onTokenRefresh = function () {\r\n        throw index_esm_ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The value of the\r\n     * `notification` property will be used as the NotificationOptions object passed to\r\n     * showNotification. Additionally, the `title` property of the notification object will be used as\r\n     * the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be shown.\r\n     */\r\n    SwController.prototype.onPush = function (event) {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var internalPayload, clientList, isNotificationShown, payload;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        internalPayload = getMessagePayloadInternal(event);\r\n                        if (!internalPayload) {\r\n                            console.debug(TAG +\r\n                                'failed to get parsed MessagePayload from the PushEvent. Skip handling the push.');\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        if (hasVisibleClients(clientList)) {\r\n                            return [2 /*return*/, sendMessagePayloadInternalToWindows(clientList, internalPayload)];\r\n                        }\r\n                        isNotificationShown = false;\r\n                        if (!!!internalPayload.notification)\r\n                            return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, showNotification(wrapInternalPayload(internalPayload))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        isNotificationShown = true;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        // MessagePayload is only passed to `onBackgroundMessage`. Skip passing MessagePayload for\r\n                        // the legacy `setBackgroundMessageHandler` to preserve the SDK behaviors.\r\n                        if (isNotificationShown === true &&\r\n                            this.isOnBackgroundMessageUsed === false) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!!this.bgMessageHandler) {\r\n                            payload = externalizePayload(internalPayload);\r\n                            if (typeof this.bgMessageHandler === 'function') {\r\n                                this.bgMessageHandler(payload);\r\n                            }\r\n                            else {\r\n                                this.bgMessageHandler.next(payload);\r\n                            }\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange = function (event) {\r\n        var _a, _b;\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var newSubscription, tokenDetails;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        newSubscription = event.newSubscription;\r\n                        if (!!newSubscription)\r\n                            return [3 /*break*/, 2];\r\n                        // Subscription revoked, delete token\r\n                        return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\r\n                    case 1:\r\n                        // Subscription revoked, delete token\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [4 /*yield*/, dbGet(this.firebaseDependencies)];\r\n                    case 3:\r\n                        tokenDetails = _c.sent();\r\n                        return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        return [4 /*yield*/, index_esm_getToken(this.firebaseDependencies, self.registration, (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY)];\r\n                    case 5:\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        var _a, _b;\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var internalPayload, link, url, originUrl, client;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\r\n                        if (!internalPayload) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button. This will allow developers to act on action button clicks\r\n                            // by using a custom onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        link = getLink(internalPayload);\r\n                        if (!link) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        url = new URL(link, self.location.href);\r\n                        originUrl = new URL(self.location.origin);\r\n                        if (url.host !== originUrl.host) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, getWindowClient(url)];\r\n                    case 1:\r\n                        client = _c.sent();\r\n                        if (!!client)\r\n                            return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        client = _c.sent();\r\n                        // Wait three seconds for the client to initialize and set up the message handler so that it\r\n                        // can receive the message.\r\n                        return [4 /*yield*/, index_esm_sleep(3000)];\r\n                    case 3:\r\n                        // Wait three seconds for the client to initialize and set up the message handler so that it\r\n                        // can receive the message.\r\n                        _c.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4: return [4 /*yield*/, client.focus()];\r\n                    case 5:\r\n                        client = _c.sent();\r\n                        _c.label = 6;\r\n                    case 6:\r\n                        if (!client) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\r\n                        internalPayload.isFirebaseMessaging = true;\r\n                        return [2 /*return*/, client.postMessage(internalPayload)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}());\r\nfunction wrapInternalPayload(internalPayload) {\r\n    var _a;\r\n    var wrappedInternalPayload = Object(tslib_es6[\"__assign\"])({}, internalPayload.notification);\r\n    // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\r\n    // notification vs a notification from somewhere else (i.e. normal web push or developer generated\r\n    // notification).\r\n    wrappedInternalPayload.data = (_a = {},\r\n        _a[FCM_MSG] = internalPayload,\r\n        _a);\r\n    return wrappedInternalPayload;\r\n}\r\nfunction getMessagePayloadInternal(_a) {\r\n    var data = _a.data;\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    try {\r\n        return data.json();\r\n    }\r\n    catch (err) {\r\n        // Not JSON so not an FCM message.\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\r\nfunction getWindowClient(url) {\r\n    return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n        var clientList, clientList_1, clientList_1_1, client, clientUrl;\r\n        var e_1, _a;\r\n        return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getClientList()];\r\n                case 1:\r\n                    clientList = _b.sent();\r\n                    try {\r\n                        for (clientList_1 = Object(tslib_es6[\"__values\"])(clientList), clientList_1_1 = clientList_1.next(); !clientList_1_1.done; clientList_1_1 = clientList_1.next()) {\r\n                            client = clientList_1_1.value;\r\n                            clientUrl = new URL(client.url, self.location.href);\r\n                            if (url.host === clientUrl.host) {\r\n                                return [2 /*return*/, client];\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) {\r\n                        e_1 = { error: e_1_1 };\r\n                    }\r\n                    finally {\r\n                        try {\r\n                            if (clientList_1_1 && !clientList_1_1.done && (_a = clientList_1.return))\r\n                                _a.call(clientList_1);\r\n                        }\r\n                        finally {\r\n                            if (e_1)\r\n                                throw e_1.error;\r\n                        }\r\n                    }\r\n                    return [2 /*return*/, null];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\r\nfunction hasVisibleClients(clientList) {\r\n    return clientList.some(function (client) {\r\n        return client.visibilityState === 'visible' &&\r\n            // Ignore chrome-extension clients as that matches the background pages of extensions, which\r\n            // are always considered visible for some reason.\r\n            !client.url.startsWith('chrome-extension://');\r\n    });\r\n}\r\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\r\n    var e_2, _a;\r\n    internalPayload.isFirebaseMessaging = true;\r\n    internalPayload.messageType = MessageType.PUSH_RECEIVED;\r\n    try {\r\n        for (var clientList_2 = Object(tslib_es6[\"__values\"])(clientList), clientList_2_1 = clientList_2.next(); !clientList_2_1.done; clientList_2_1 = clientList_2.next()) {\r\n            var client = clientList_2_1.value;\r\n            client.postMessage(internalPayload);\r\n        }\r\n    }\r\n    catch (e_2_1) {\r\n        e_2 = { error: e_2_1 };\r\n    }\r\n    finally {\r\n        try {\r\n            if (clientList_2_1 && !clientList_2_1.done && (_a = clientList_2.return))\r\n                _a.call(clientList_2);\r\n        }\r\n        finally {\r\n            if (e_2)\r\n                throw e_2.error;\r\n        }\r\n    }\r\n}\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction showNotification(notificationPayloadInternal) {\r\n    var _a;\r\n    // Note: Firefox does not support the maxActions property.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\r\n    var actions = notificationPayloadInternal.actions;\r\n    var maxActions = Notification.maxActions;\r\n    if (actions && maxActions && actions.length > maxActions) {\r\n        console.warn(\"This browser only supports \" + maxActions + \" actions. The remaining actions will not be displayed.\");\r\n    }\r\n    return self.registration.showNotification((_a =\r\n        /* title= */ notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\r\n}\r\nfunction getLink(payload) {\r\n    var _a, _b, _c;\r\n    // eslint-disable-next-line camelcase\r\n    var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\r\n    if (link) {\r\n        return link;\r\n    }\r\n    if (isConsoleMessage(payload.data)) {\r\n        // Notification created in the Firebase Console. Redirect to origin.\r\n        return self.location.origin;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_WindowController = /** @class */ /*@__PURE__*/ (function () {\r\n    function WindowController(firebaseDependencies) {\r\n        var _this = this;\r\n        this.firebaseDependencies = firebaseDependencies;\r\n        this.vapidKey = null;\r\n        this.onMessageCallback = null;\r\n        navigator.serviceWorker.addEventListener('message', function (e) {\r\n            return _this.messageEventListener(e);\r\n        });\r\n    }\r\n    Object.defineProperty(WindowController.prototype, \"app\", {\r\n        get: function () {\r\n            return this.firebaseDependencies.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    WindowController.prototype.messageEventListener = function (event) {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var internalPayload, dataPayload;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        internalPayload = event.data;\r\n                        if (!internalPayload.isFirebaseMessaging) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // onMessageCallback is either a function or observer/subscriber.\r\n                        // TODO: in the modularization release, have onMessage handle type MessagePayload as supposed to\r\n                        // the legacy payload where some fields are in snake cases.\r\n                        if (this.onMessageCallback &&\r\n                            internalPayload.messageType === MessageType.PUSH_RECEIVED) {\r\n                            if (typeof this.onMessageCallback === 'function') {\r\n                                this.onMessageCallback(stripInternalFields(Object.assign({}, internalPayload)));\r\n                            }\r\n                            else {\r\n                                this.onMessageCallback.next(Object.assign({}, internalPayload));\r\n                            }\r\n                        }\r\n                        dataPayload = internalPayload.data;\r\n                        if (!(isConsoleMessage(dataPayload) &&\r\n                            dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'))\r\n                            return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.logEvent(internalPayload.messageType, dataPayload)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.getVapidKey = function () {\r\n        return this.vapidKey;\r\n    };\r\n    WindowController.prototype.getSwReg = function () {\r\n        return this.swRegistration;\r\n    };\r\n    WindowController.prototype.getToken = function (options) {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(Notification.permission === 'default'))\r\n                            return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (Notification.permission !== 'granted') {\r\n                            throw index_esm_ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        return [4 /*yield*/, this.updateVapidKey(options === null || options === void 0 ? void 0 : options.vapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.updateSwReg(options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/, index_esm_getToken(this.firebaseDependencies, this.swRegistration, this.vapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.updateVapidKey = function (vapidKey) {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                if (!!vapidKey) {\r\n                    this.vapidKey = vapidKey;\r\n                }\r\n                else if (!this.vapidKey) {\r\n                    this.vapidKey = DEFAULT_VAPID_KEY;\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.updateSwReg = function (swRegistration) {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(!swRegistration && !this.swRegistration))\r\n                            return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.registerDefaultSw()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!swRegistration && !!this.swRegistration) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n                            throw index_esm_ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n                        }\r\n                        this.swRegistration = swRegistration;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.registerDefaultSw = function () {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var _a, e_1;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        _a = this;\r\n                        return [4 /*yield*/, navigator.serviceWorker.register(DEFAULT_SW_PATH, {\r\n                                scope: DEFAULT_SW_SCOPE\r\n                            })];\r\n                    case 1:\r\n                        _a.swRegistration = _b.sent();\r\n                        // The timing when browser updates sw when sw has an update is unreliable by my experiment. It\r\n                        // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\r\n                        // is stuck with the old version. For example,\r\n                        // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\r\n                        // sw if there was an update.\r\n                        this.swRegistration.update().catch(function () {\r\n                            /* it is non blocking and we don't care if it failed */\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_1 = _b.sent();\r\n                        throw index_esm_ERROR_FACTORY.create(\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                            browserErrorMessage: e_1.message\r\n                        });\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.deleteToken = function () {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.swRegistration)\r\n                            return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.registerDefaultSw()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, deleteToken(this.firebaseDependencies, this.swRegistration)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted.\r\n     *\r\n     * @return Resolves if the permission was granted, rejects otherwise.\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Notification.permission === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw index_esm_ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw index_esm_ERROR_FACTORY.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\r\n     * ServiceWorkerRegistration;}): Promise<string> instead.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (vapidKey) {\r\n        if (this.vapidKey !== null) {\r\n            throw index_esm_ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\r\n        }\r\n        if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\r\n            throw index_esm_ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\r\n        }\r\n        this.vapidKey = vapidKey;\r\n    };\r\n    /**\r\n     * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\r\n     * ServiceWorkerRegistration;}): Promise<string> instead.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (swRegistration) {\r\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n            throw index_esm_ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n        }\r\n        if (this.swRegistration) {\r\n            throw index_esm_ERROR_FACTORY.create(\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */);\r\n        }\r\n        this.swRegistration = swRegistration;\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on message.\r\n     *\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver) {\r\n        var _this = this;\r\n        this.onMessageCallback = nextOrObserver;\r\n        return function () {\r\n            _this.onMessageCallback = null;\r\n        };\r\n    };\r\n    WindowController.prototype.setBackgroundMessageHandler = function () {\r\n        throw index_esm_ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    WindowController.prototype.onBackgroundMessage = function () {\r\n        throw index_esm_ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    /**\r\n     * @deprecated No-op. It was initially designed with token rotation requests from server in mind.\r\n     * However, the plan to implement such feature was abandoned.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function () {\r\n        return function () { };\r\n    };\r\n    WindowController.prototype.logEvent = function (messageType, data) {\r\n        return Object(tslib_es6[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var eventType, analytics;\r\n            return Object(tslib_es6[\"__generator\"])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        eventType = getEventType(messageType);\r\n                        return [4 /*yield*/, this.firebaseDependencies.analyticsProvider.get()];\r\n                    case 1:\r\n                        analytics = _a.sent();\r\n                        analytics.logEvent(eventType, {\r\n                            /* eslint-disable camelcase */\r\n                            message_id: data[CONSOLE_CAMPAIGN_ID],\r\n                            message_name: data[CONSOLE_CAMPAIGN_NAME],\r\n                            message_time: data[CONSOLE_CAMPAIGN_TIME],\r\n                            message_device_time: Math.floor(Date.now() / 1000)\r\n                            /* eslint-enable camelcase */\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return WindowController;\r\n}());\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\nfunction stripInternalFields(internalPayload) {\r\n    delete internalPayload.messageType;\r\n    delete internalPayload.isFirebaseMessaging;\r\n    return internalPayload;\r\n}\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction index_esm_extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw index_esm_getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw index_esm_getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    var options = app.options;\r\n    try {\r\n        for (var configKeys_1 = Object(tslib_es6[\"__values\"])(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!options[keyName]) {\r\n                throw index_esm_getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) {\r\n        e_1 = { error: e_1_1 };\r\n    }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return))\r\n                _a.call(configKeys_1);\r\n        }\r\n        finally {\r\n            if (e_1)\r\n                throw e_1.error;\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction index_esm_getMissingValueError(valueName) {\r\n    return index_esm_ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\r\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MESSAGING_NAME = 'messaging';\r\nfunction factoryMethod(container) {\r\n    // Dependencies.\r\n    var app = container.getProvider('app').getImmediate();\r\n    var appConfig = index_esm_extractAppConfig(app);\r\n    var installations = container.getProvider('installations').getImmediate();\r\n    var analyticsProvider = container.getProvider('analytics-internal');\r\n    var firebaseDependencies = {\r\n        app: app,\r\n        appConfig: appConfig,\r\n        installations: installations,\r\n        analyticsProvider: analyticsProvider\r\n    };\r\n    if (!isSupported()) {\r\n        throw index_esm_ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n    }\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return new index_esm_SwController(firebaseDependencies);\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return new index_esm_WindowController(firebaseDependencies);\r\n    }\r\n}\r\nvar NAMESPACE_EXPORTS = {\r\n    isSupported: isSupported\r\n};\r\nindex_cjs_default.a.INTERNAL.registerComponent(new dist_index_cjs[\"Component\"](MESSAGING_NAME, factoryMethod, \"PUBLIC\" /* PUBLIC */).setServiceProps(NAMESPACE_EXPORTS));\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return ('indexedDB' in window &&\r\n        indexedDB !== null &&\r\n        navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('indexedDB' in self &&\r\n        indexedDB !== null &&\r\n        'PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n//# sourceMappingURL=index.esm.js.map\r\n\n// CONCATENATED MODULE: ./node_modules/firebase/messaging/dist/index.esm.js\n\n//# sourceMappingURL=index.esm.js.map\n\n\n/***/ }),\n\n/***/ \"nbvr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  undefined;\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n/***/ })\n\n}]);","inputSourceMap":null}