{"version":3,"sources":["./src/app/account/auth/auth-routing.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/auth.module.ts","./src/app/core/services/user.service.ts","./src/app/account/account.module.ts","./src/app/account/account-routing.module.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/**\n * Login component\n */\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  error = '';\n  returnUrl: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private authFackservice: AuthfakeauthenticationService) { }\n\n  ngOnInit() {\n    document.body.setAttribute('class', 'authentication-bg');\n\n    this.loginForm = this.formBuilder.group({\n      email: ['admin@themesbrand.com', [Validators.required, Validators.email]],\n      password: ['123456', [Validators.required]],\n    });\n\n    // reset login status\n    // this.authenticationService.logout();\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n          document.body.removeAttribute('class');\n          this.router.navigate(['/dashboard']);\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.router.navigate(['/dashboard']);\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\n</div>\n<div class=\"account-pages mt-5 mb-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"text-center\">\n              <a href=\"/\" class=\"mb-5 d-block auth-logo\">\n                  <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\n                  <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\n              </a>\n          </div>\n      </div>\n    </div>\n    <div class=\"row align-items-center justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n\n          <div class=\"card-body p-4\"> \n            <div class=\"text-center mt-2\">\n                <h5 class=\"text-primary\">Welcome Back !</h5>\n                <p class=\"text-muted\">Sign in to continue to Minible.</p>\n            </div>\n            <div class=\"p-2 mt-4\">\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\">Username</label>\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <div class=\"float-end\">\n                      <a href=\"/account/reset-password\" class=\"text-muted\">Forgot password?</a>\n                  </div>\n                  <label for=\"password\">Password</label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" />\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n                </div>\n\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"auth-remember-check\">\n                    <label class=\"form-check-label\" for=\"auth-remember-check\">Remember me</label>\n                </div>\n                \n                <div class=\"mt-3 text-end\">\n                    <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Log In</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <div class=\"signin-other-title\">\n                      <h5 class=\"font-size-14 mb-3 title\">Sign in with</h5>\n                  </div>\n                  \n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                          <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-info text-white border-info\">\n                          <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                          <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n\n                <div class=\"mt-4 text-center\">\n                    <p class=\"mb-0\">Don't have an account ? <a href=\"/account/signup\" class=\"fw-medium text-primary\"> Signup now </a> </p>\n                </div>\n              </form>\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"mt-5 text-center\">\n          <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!-- end container -->\n</div>\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit() {\n    document.body.setAttribute('class', 'authentication-bg');\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            document.body.removeAttribute('class');\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\n</div>\n<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"text-center\">\n              <a href=\"/\" class=\"mb-5 d-block auth-logo\">\n                  <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\n                  <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\n              </a>\n          </div>\n      </div>\n    </div>\n    <div class=\"row align-items-center justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n          <div class=\"card\">\n             \n              <div class=\"card-body p-4\"> \n\n                  <div class=\"text-center mt-2\">\n                      <h5 class=\"text-primary\">Register Account</h5>\n                      <p class=\"text-muted\">Get your free Minible account now.</p>\n                  </div>\n                  <div class=\"p-2 mt-4\">\n                    <form name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n                      <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\n                      </ngb-alert>\n                      \n                      <div class=\"mb-3\">\n                          <label for=\"username\">Email</label>\n                          <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                          </div>     \n                      </div>\n\n                      <div class=\"mb-3\">\n                          <label for=\"username\">Username</label>\n                          <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\" placeholder=\"Enter username\" />\n\n                          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                          </div> \n                      </div>\n\n                      <div class=\"mb-3\">\n                          <label for=\"userpassword\">Password</label>\n                          <!-- <input type=\"password\" class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">         -->\n                          <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\n\n                          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                          </div>\n                      </div>\n\n                      <div class=\"form-check\">\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"auth-terms-condition-check\">\n                          <label class=\"form-check-label\" for=\"auth-terms-condition-check\">I accept <a href=\"javascript: void(0);\" class=\"text-dark\">Terms and Conditions</a></label>\n                      </div>\n                      \n                      <div class=\"mt-3 text-end\">\n                          <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Register</button>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                          <div class=\"signin-other-title\">\n                              <h5 class=\"font-size-14 mb-3 title\">Sign up using</h5>\n                          </div>\n                          <ul class=\"list-inline\">\n                              <li class=\"list-inline-item\">\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                                      <i class=\"mdi mdi-facebook\"></i>\n                                  </a>\n                              </li>\n                              <li class=\"list-inline-item\">\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-info text-white border-info\">\n                                      <i class=\"mdi mdi-twitter\"></i>\n                                  </a>\n                              </li>\n                              <li class=\"list-inline-item\">\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                                      <i class=\"mdi mdi-google\"></i>\n                                  </a>\n                              </li>\n                          </ul>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                          <p class=\"text-muted mb-0\">Already have an account ? <a href=\"/account/login\" class=\"fw-medium text-primary\"> Login</a></p>\n                      </div>\n                    </form>\n                  </div>\n\n              </div>\n          </div>\n          <div class=\"mt-5 text-center\">\n              <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n          </div>\n\n      </div>\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\n\n/**\n * Reset-password component\n */\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  resetForm: FormGroup;\n  submitted = false;\n  error = '';\n  success = '';\n  loading = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    document.body.setAttribute('class', 'authentication-bg');\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\n</div>\n<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div>\n\n          <a href=\"/\" class=\"mb-5 d-block auth-logo\">\n            <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\n            <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\n          </a>\n          <div class=\"card\">\n\n            <div class=\"card-body p-4\">\n\n              <div class=\"text-center mt-2\">\n                <h5 class=\"text-primary\">Reset Password</h5>\n                <p class=\"text-muted\">Reset Password with Minible.</p>\n              </div>\n              <div class=\"p-2 mt-4\">\n                <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                  Enter your Email and instructions will be sent to you!\n                </div>\n                <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\n                  novalidate>\n                  <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                  <div class=\"mb-3\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                      <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                    </div>\n                  </div>\n\n                  <div class=\"mt-3 text-end\">\n                    <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Reset</button>\n                  </div>\n\n                  <div class=\"mt-4 text-center\">\n                    <p class=\"mb-0\">Remember It ? <a href=\"/account/login\" class=\"fw-medium text-primary\">\n                        Signin </a></p>\n                  </div>\n                </form>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"mt-5 text-center\">\n            <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n          </div>\n        </div>\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthRoutingModule } from './auth-routing';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, PasswordresetComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbAlertModule,\n    UIModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`/api/login`);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n"],"sourceRoot":"webpack:///"}