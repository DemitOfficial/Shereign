{"version":3,"sources":["webpack:///src/app/account/auth/auth-routing.ts","webpack:///src/app/account/auth/login/login.component.ts","webpack:///src/app/account/auth/login/login.component.html","webpack:///src/app/account/auth/signup/signup.component.ts","webpack:///src/app/account/auth/signup/signup.component.html","webpack:///src/app/account/auth/passwordreset/passwordreset.component.ts","webpack:///src/app/account/auth/passwordreset/passwordreset.component.html","webpack:///src/app/account/auth/auth.module.ts","webpack:///src/app/core/services/user.service.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account-routing.module.ts"],"names":["routes","path","component","AuthRoutingModule","forChild","imports","exports","LoginComponent","formBuilder","route","router","authenticationService","authFackservice","submitted","error","year","Date","getFullYear","document","body","setAttribute","loginForm","group","email","required","password","returnUrl","snapshot","queryParams","controls","invalid","defaultauth","login","f","value","then","res","removeAttribute","navigate","pipe","subscribe","data","onSubmit","selector","templateUrl","styleUrls","SignupComponent","userService","successmsg","signupForm","username","register","PasswordresetComponent","success","loading","resetForm","resetPassword","AuthModule","declarations","UserProfileService","http","get","user","post","providedIn","AccountModule","loadChildren","m","AccountRoutingModule"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/**\n * Login component\n */\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  error = '';\n  returnUrl: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private authFackservice: AuthfakeauthenticationService) { }\n\n  ngOnInit() {\n    document.body.setAttribute('class', 'authentication-bg');\n\n    this.loginForm = this.formBuilder.group({\n      email: ['admin@themesbrand.com', [Validators.required, Validators.email]],\n      password: ['123456', [Validators.required]],\n    });\n\n    // reset login status\n    // this.authenticationService.logout();\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n          document.body.removeAttribute('class');\n          this.router.navigate(['/dashboard']);\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.router.navigate(['/dashboard']);\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\n</div>\n<div class=\"account-pages mt-5 mb-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"text-center\">\n              <a href=\"/\" class=\"mb-5 d-block auth-logo\">\n                  <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\n                  <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\n              </a>\n          </div>\n      </div>\n    </div>\n    <div class=\"row align-items-center justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n\n          <div class=\"card-body p-4\"> \n            <div class=\"text-center mt-2\">\n                <h5 class=\"text-primary\">Welcome Back !</h5>\n                <p class=\"text-muted\">Sign in to continue to Minible.</p>\n            </div>\n            <div class=\"p-2 mt-4\">\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\">Username</label>\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <div class=\"float-end\">\n                      <a href=\"/account/reset-password\" class=\"text-muted\">Forgot password?</a>\n                  </div>\n                  <label for=\"password\">Password</label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" />\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n                </div>\n\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"auth-remember-check\">\n                    <label class=\"form-check-label\" for=\"auth-remember-check\">Remember me</label>\n                </div>\n                \n                <div class=\"mt-3 text-end\">\n                    <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Log In</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <div class=\"signin-other-title\">\n                      <h5 class=\"font-size-14 mb-3 title\">Sign in with</h5>\n                  </div>\n                  \n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                          <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-info text-white border-info\">\n                          <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                          <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n\n                <div class=\"mt-4 text-center\">\n                    <p class=\"mb-0\">Don't have an account ? <a href=\"/account/signup\" class=\"fw-medium text-primary\"> Signup now </a> </p>\n                </div>\n              </form>\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"mt-5 text-center\">\n          <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!-- end container -->\n</div>\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit() {\n    document.body.setAttribute('class', 'authentication-bg');\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            document.body.removeAttribute('class');\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\n</div>\n<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"text-center\">\n              <a href=\"/\" class=\"mb-5 d-block auth-logo\">\n                  <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\n                  <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\n              </a>\n          </div>\n      </div>\n    </div>\n    <div class=\"row align-items-center justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n          <div class=\"card\">\n             \n              <div class=\"card-body p-4\"> \n\n                  <div class=\"text-center mt-2\">\n                      <h5 class=\"text-primary\">Register Account</h5>\n                      <p class=\"text-muted\">Get your free Minible account now.</p>\n                  </div>\n                  <div class=\"p-2 mt-4\">\n                    <form name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n                      <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\n                      </ngb-alert>\n                      \n                      <div class=\"mb-3\">\n                          <label for=\"username\">Email</label>\n                          <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                          </div>     \n                      </div>\n\n                      <div class=\"mb-3\">\n                          <label for=\"username\">Username</label>\n                          <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\" placeholder=\"Enter username\" />\n\n                          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                          </div> \n                      </div>\n\n                      <div class=\"mb-3\">\n                          <label for=\"userpassword\">Password</label>\n                          <!-- <input type=\"password\" class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">         -->\n                          <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\n\n                          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                          </div>\n                      </div>\n\n                      <div class=\"form-check\">\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"auth-terms-condition-check\">\n                          <label class=\"form-check-label\" for=\"auth-terms-condition-check\">I accept <a href=\"javascript: void(0);\" class=\"text-dark\">Terms and Conditions</a></label>\n                      </div>\n                      \n                      <div class=\"mt-3 text-end\">\n                          <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Register</button>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                          <div class=\"signin-other-title\">\n                              <h5 class=\"font-size-14 mb-3 title\">Sign up using</h5>\n                          </div>\n                          <ul class=\"list-inline\">\n                              <li class=\"list-inline-item\">\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                                      <i class=\"mdi mdi-facebook\"></i>\n                                  </a>\n                              </li>\n                              <li class=\"list-inline-item\">\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-info text-white border-info\">\n                                      <i class=\"mdi mdi-twitter\"></i>\n                                  </a>\n                              </li>\n                              <li class=\"list-inline-item\">\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                                      <i class=\"mdi mdi-google\"></i>\n                                  </a>\n                              </li>\n                          </ul>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                          <p class=\"text-muted mb-0\">Already have an account ? <a href=\"/account/login\" class=\"fw-medium text-primary\"> Login</a></p>\n                      </div>\n                    </form>\n                  </div>\n\n              </div>\n          </div>\n          <div class=\"mt-5 text-center\">\n              <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n          </div>\n\n      </div>\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\n\n/**\n * Reset-password component\n */\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  resetForm: FormGroup;\n  submitted = false;\n  error = '';\n  success = '';\n  loading = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    document.body.setAttribute('class', 'authentication-bg');\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\n</div>\n<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div>\n\n          <a href=\"/\" class=\"mb-5 d-block auth-logo\">\n            <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\n            <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\n          </a>\n          <div class=\"card\">\n\n            <div class=\"card-body p-4\">\n\n              <div class=\"text-center mt-2\">\n                <h5 class=\"text-primary\">Reset Password</h5>\n                <p class=\"text-muted\">Reset Password with Minible.</p>\n              </div>\n              <div class=\"p-2 mt-4\">\n                <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                  Enter your Email and instructions will be sent to you!\n                </div>\n                <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\n                  novalidate>\n                  <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                  <div class=\"mb-3\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                      <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                    </div>\n                  </div>\n\n                  <div class=\"mt-3 text-end\">\n                    <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Reset</button>\n                  </div>\n\n                  <div class=\"mt-4 text-center\">\n                    <p class=\"mb-0\">Remember It ? <a href=\"/account/login\" class=\"fw-medium text-primary\">\n                        Signin </a></p>\n                  </div>\n                </form>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"mt-5 text-center\">\n            <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n          </div>\n        </div>\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthRoutingModule } from './auth-routing';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, PasswordresetComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbAlertModule,\n    UIModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`/api/login`);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n"]}