const hasOwnProperty = Object.prototype.hasOwnProperty;
/*
Really simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.
Wanted to use a third-party lib, but none did exactly this.
*/
export function deepCopy(input) {
    if (Array.isArray(input)) {
        return input.map(deepCopy);
    }
    else if (input instanceof Date) {
        return new Date(input.valueOf());
    }
    else if (typeof input === 'object' && input) { // non-null object
        return mapHash(input, deepCopy);
    }
    else { // everything else (null, function, etc)
        return input;
    }
}
export function shallowCopy(val) {
    if (typeof val === 'object') {
        if (Array.isArray(val)) {
            val = Array.prototype.slice.call(val);
        }
        else if (val) { // non-null
            val = Object.assign({}, val);
        }
    }
    return val;
}
export function mapHash(input, func) {
    const output = {};
    for (const key in input) {
        if (hasOwnProperty.call(input, key)) {
            output[key] = func(input[key], key);
        }
    }
    return output;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FkYW0vUHJvamVjdHMvZnVsbGNhbGVuZGFyL3BhY2thZ2VzLWNvbnRyaWIvYW5ndWxhci9wcm9qZWN0cy9mdWxsY2FsZW5kYXIvc3JjLyIsInNvdXJjZXMiOlsibGliL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDO0FBRXZEOzs7RUFHRTtBQUNGLE1BQU0sVUFBVSxRQUFRLENBQUMsS0FBSztJQUU1QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDeEIsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBRTVCO1NBQU0sSUFBSSxLQUFLLFlBQVksSUFBSSxFQUFFO1FBQ2hDLE9BQU8sSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7S0FFbEM7U0FBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLEVBQUUsRUFBRSxrQkFBa0I7UUFDakUsT0FBTyxPQUFPLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0tBRWpDO1NBQU0sRUFBRSx3Q0FBd0M7UUFDL0MsT0FBTyxLQUFLLENBQUM7S0FDZDtBQUNILENBQUM7QUFHRCxNQUFNLFVBQVUsV0FBVyxDQUFDLEdBQUc7SUFDN0IsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLEVBQUU7UUFDM0IsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3RCLEdBQUcsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDdkM7YUFBTSxJQUFJLEdBQUcsRUFBRSxFQUFFLFdBQVc7WUFDM0IsR0FBRyxxQkFBUSxHQUFHLENBQUUsQ0FBQztTQUNsQjtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBR0QsTUFBTSxVQUFVLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSTtJQUNqQyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFFbEIsS0FBSyxNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQUU7UUFDdkIsSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsRUFBRTtZQUNuQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUNyQztLQUNGO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKlxuUmVhbGx5IHNpbXBsZSBjbG9uZSB1dGlsaXR5LiBPbmx5IGNvcGllcyBwbGFpbiBhcnJheXMsIG9iamVjdHMsIGFuZCBEYXRlcy4gVHJhbnNmZXJzIGV2ZXJ5dGhpbmcgZWxzZSBhcy1pcy5cbldhbnRlZCB0byB1c2UgYSB0aGlyZC1wYXJ0eSBsaWIsIGJ1dCBub25lIGRpZCBleGFjdGx5IHRoaXMuXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZXBDb3B5KGlucHV0KSB7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuIGlucHV0Lm1hcChkZWVwQ29weSk7XG5cbiAgfSBlbHNlIGlmIChpbnB1dCBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoaW5wdXQudmFsdWVPZigpKTtcblxuICB9IGVsc2UgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcgJiYgaW5wdXQpIHsgLy8gbm9uLW51bGwgb2JqZWN0XG4gICAgcmV0dXJuIG1hcEhhc2goaW5wdXQsIGRlZXBDb3B5KTtcblxuICB9IGVsc2UgeyAvLyBldmVyeXRoaW5nIGVsc2UgKG51bGwsIGZ1bmN0aW9uLCBldGMpXG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIHNoYWxsb3dDb3B5KHZhbCkge1xuICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICB2YWwgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh2YWwpO1xuICAgIH0gZWxzZSBpZiAodmFsKSB7IC8vIG5vbi1udWxsXG4gICAgICB2YWwgPSB7IC4uLnZhbCB9O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBtYXBIYXNoKGlucHV0LCBmdW5jKSB7XG4gIGNvbnN0IG91dHB1dCA9IHt9O1xuXG4gIGZvciAoY29uc3Qga2V5IGluIGlucHV0KSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoaW5wdXQsIGtleSkpIHtcbiAgICAgIG91dHB1dFtrZXldID0gZnVuYyhpbnB1dFtrZXldLCBrZXkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXRwdXQ7XG59XG4iXX0=